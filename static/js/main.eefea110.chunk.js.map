{"version":3,"sources":["components/MegaMinx/utils.js","components/MegaMinx/CornerDimensions.js","components/MegaMinx/EdgeDimensions.js","components/MegaMinx/swapColors.js","components/MegaMinx/facesToHide.js","components/MegaMinx/colorMatchUps.js","components/MegaMinx/facePositions.js","components/MegaMinx/calculateTurn.js","components/MenuButton/MenuButton.js","components/Main/scramble.js","components/SpeedSlider/SpeedSlider.js","components/UndoRedo/UndoRedo.js","components/Main/Main.js","components/ColorPicker/ColorPicker.js","components/Solver/blueStar.js","components/Solver/pieces.js","components/Solver/swapColors.js","components/Solver/utils.js","components/Solver/solve.js","components/Solver/Solver.js","components/Menu/Menu.js","components/MegaMinx/MegaMinx.js","components/Modal/Modal.js","components/Navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["dToR","degrees","Math","PI","rToD","radians","rotate_point","cx","cy","angle","p","s","sin","c","cos","x","y","xnew","ynew","CornerDimensions","size","face","corner","offset","csc","ratio","halfPoint","x1","y1","p1y","p2x","p2y","p3x","p3y","p4x","p4y","p1xb","p1yb","p2xb","p2yb","holdX1","holdY1","holdX2","holdY2","p3xb","p3yb","p4xb","p4yb","face1","corner1","p1","p2","p3","p4","corner2","corner3","corner4","corner5","sides","side1a","side1b","EdgeDimensions","edge","xOffset1","xOffset2","x2","y2","p1X","p1Y","p2X","p2Y","newX1","newY1","newX2","newY2","edge1","edge2","edge3","edge4","edge5","side1","swapColors","deca","speed","hex","piece","material","color","getHex","setColor","a","b","set","front","tempColor","tempColor2","side","extractEdge","sideColor","pieces","left","center","right","swap","e1","e2","e3","e4","e5","tempLeft","tempCenter","tempRight","facesToHide","pos","face2","face3","face4","face5","face6","face7","face8","face9","face10","face11","face12","colorMatchUps","faceTilt","zOffset","facePos","translate","z","rotate","calculateTurn","startPoint","newPoint","selectedSide","selectedPiece","touchedEdge","difX","turnDirection","abs","newStart","atan2","dist","hypot","newCurrent","MenuButton","props","className","children","onClick","scramble","moves","length","lastIndex","secondToLastIndex","randomFace","floor","random","randomDir","move","push","style","width","position","top","fontSize","SpeedSlider","setSpeed","useState","speedToValue","current","setCurrent","defaultValue","value","min","max","step","onChange","newSpeed","UndoRedo","setIndex","Main","setMoveLogIndex","setMoveQueue","reset","setMenuId","setCurrentFunction","currentFunction","sliderSpeed","setSliderSpeed","Date","now","ColorPicker","resetMegaMinx","getColor","selected","setSelected","faceColorsValues","map","i","replace","blueStar","index","console","log","values","Object","keys","colorNames","includes","sideToTurn","indexOf","filter","blue","key","direction","indexKeys","indexOfBlue","faceToTurn","topSide","bottomSide","rightOfBottomSide","leftOfBottomSide","decaObject","type","corners","edges","colorFace","pink","yellow","red","green","lightpurple","lightblue","lightbrown","lightgreen","orange","purple","white","hexToColorName","getHexString","utils","updateDeca","moveSet","forEach","split","findPiece","pieceArray","pieceToFind","tempPiece","isSolved","pieceKeys","pieceValues","sticker","reverseMove","solve","flattened","flat","mesh","solveIndex","solveOrder","allPieces","pieceToSolve","JSON","stringify","reverse","reversedMoves","Solver","getCounter","setMoves","loadMessage","setLoadMessage","currentMove","setCurrentMove","useEffect","solveMoves","concat","reversed","splice","base","movesToJump","slice","jumpToMove","Menu","menuId","menus","MegaMinx","faceToRotate","moveQueue","moveLog","moveLogIndex","speedChanged","speedHolder","counter","updateMouse","currentFunc","currentColor","undoRedo","scene","THREE","camera","window","innerWidth","innerHeight","renderer","antialias","alpha","raycaster","mouse","controls","OrbitControls","domElement","enabled","enableDamping","dampingFactor","enableZoom","autoRotate","minDistance","maxDistance","enablePan","LEFT","UP","RIGHT","BOTTOM","addEventListener","e","render","CameraControls","func","onMouseDown","clientX","clientY","setFromCamera","intersects","intersectObjects","filteredIntersects","object","name","uv","onMouseUp","onMouseMove","pointerType","turn","squareMesh","n","position2","square","square2","moveTo","lineTo","geometry","geometry2","depthWrite","material2","squareMesh2","scale","translateZ","rotateZ","rotateY","translateY","translateX","rotateX","add","visible","setClearColor","setSize","tanFOV","tan","fov","windowHeight","aspect","atan","updateProjectionMatrix","lookAt","elements","document","getElementsByClassName","parentNode","removeChild","removeElementsByClass","body","appendChild","removeEventListener","faceColors","decaFace","pentagonMesh","pentagonMesh2","lineWidth","pentagon","pentagon2","c1","c2","s1","s2","Corner","Edge","animate","tempSpeed","shift","rotateFace","requestAnimationFrame","update","clear","Modal","modal","toggleModal","target","href","Navbar","float","height","id","App","setReset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eefea110.chunk.js","sourcesContent":["import { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nexport const CameraControls = (camera, renderer,scene) => {\r\n    let controls = new OrbitControls( camera , renderer.domElement);\r\n    controls.enabled = true;\r\n    controls.enableDamping = true;   //damping \r\n    controls.dampingFactor = 0.15;   //damping inertia\r\n    controls.enableZoom = true;      //Zooming\r\n    controls.autoRotate = false;     //Enable auto rotation\r\n    controls.minDistance = (2+5);\r\n    controls.maxDistance = (2+5)+20;\r\n    controls.enablePan = false;\r\n    controls.keys = {\r\n        LEFT: null, //left arrow\r\n        UP: null, // up arrow\r\n        RIGHT: null, // right arrow\r\n        BOTTOM: null // down arrow\r\n    };\r\n    controls.addEventListener(\"change\", (e) => {\r\n        if (renderer) renderer.render(scene, camera);\r\n    });\r\n    return controls;\r\n}\r\n\r\nexport function dToR (degrees) {\r\n    return degrees*(Math.PI/180)\r\n}\r\n\r\nexport function rToD(radians){\r\n  return radians * (180/Math.PI);\r\n}\r\n\r\nexport function rotate_point(cx,cy,angle,p){\r\n    let s = Math.sin(dToR(angle));\r\n    let c = Math.cos(dToR(angle));\r\n\r\n    // translate point back to origin:\r\n    //console.log(p,cx,cy)\r\n    p.x -= cx;\r\n    p.y -= cy;\r\n\r\n\r\n    // rotate point\r\n    let xnew = p.x * c - p.y * s;\r\n    let ynew = p.x * s + p.y * c;\r\n\r\n    // translate point back:\r\n    p.x = xnew + cx;\r\n    p.y = ynew + cy;\r\n    //console.log(p)\r\n    return [p.x,p.y];\r\n}","import {dToR,rotate_point} from './utils';\r\n\r\nconst CornerDimensions = (size,face,corner,offset) =>{\r\n\r\n    Math.csc = function(x) { return 1 / Math.sin(x); }\r\n\r\n    // Degrees to Radians\r\n\r\n    let ratio = 2.25;\r\n\r\n    if(offset){\r\n        size=size*1.075;\r\n        ratio=ratio*.95\r\n    }\r\n\r\n\r\n    //const distToEdge = n*ratio*Math.cos(degreesToRadians(36))\r\n    let halfPoint = ((size*ratio)-size)/2;\r\n    let c = Math.csc(dToR(36))*halfPoint;\r\n    let x1 = c*Math.sin(dToR(54))\r\n    let y1 = size+halfPoint;\r\n\r\n    let [p1x,p1y] = [0, size*ratio];\r\n    let [p2x,p2y] = [x1,y1];\r\n    let [p3x,p3y] = rotate_point(x1,y1,-144,{x:0,y:size});\r\n    let [p4x,p4y] = rotate_point(0,size*ratio,-144,{x:-x1,y:y1});\r\n\r\n    let [p1xb,p1yb] = rotate_point(0,0,-72,{x:-x1,y:y1});\r\n    let [p2xb,p2yb] = rotate_point(0,0,-72,{x:0,y:size*ratio});\r\n\r\n    let [holdX1,holdY1] = rotate_point(0,0,-72,{x:x1,y:y1});\r\n    let [holdX2,holdY2] = rotate_point(0,0,-72,{x:0,y:size});\r\n\r\n    let [p3xb,p3yb] = rotate_point(p2xb,p2yb,144,{x:holdX1,y:holdY1});\r\n    let [p4xb,p4yb] = rotate_point(p1xb,p1yb,144,{x:holdX2,y:holdY2});\r\n\r\n\r\n    const faces = {\r\n        face1 : {\r\n            corner1 : {\r\n                p1 : [0, size*ratio],\r\n                p2 : [x1,y1],\r\n                p3 : [0, size],\r\n                p4 : [-x1,y1]\r\n            },\r\n            corner2 : {\r\n                p1 : rotate_point(0,0,-72,{x:0,y:size*ratio}), \r\n                p2 : rotate_point(0,0,-72,{x:x1,y:y1}),\r\n                p3 : rotate_point(0,0,-72,{x:0,y:size}),\r\n                p4 : rotate_point(0,0,-72,{x:-x1,y:y1})\r\n            },\r\n            corner3 : {\r\n                p1 : rotate_point(0,0,-72*2,{x:0,y:size*ratio}), \r\n                p2 : rotate_point(0,0,-72*2,{x:x1,y:y1}),\r\n                p3 : rotate_point(0,0,-72*2,{x:0,y:size}),\r\n                p4 : rotate_point(0,0,-72*2,{x:-x1,y:y1})\r\n            },\r\n            corner4 : {\r\n                p1 : rotate_point(0,0,-72*3,{x:0,y:size*ratio}), \r\n                p2 : rotate_point(0,0,-72*3,{x:x1,y:y1}),\r\n                p3 : rotate_point(0,0,-72*3,{x:0,y:size}),\r\n                p4 : rotate_point(0,0,-72*3,{x:-x1,y:y1})\r\n            },\r\n            corner5 : {\r\n                p1 : rotate_point(0,0,-72*4,{x:0,y:size*ratio}), \r\n                p2 : rotate_point(0,0,-72*4,{x:x1,y:y1}),\r\n                p3 : rotate_point(0,0,-72*4,{x:0,y:size}),\r\n                p4 : rotate_point(0,0,-72*4,{x:-x1,y:y1})\r\n            },\r\n        },\r\n        sides : {\r\n            side1a : {\r\n                p1: rotate_point(0,0,36,{x:p1x,y:p1y}),\r\n                p2: rotate_point(0,0,36,{x:p2x,y:p2y}),\r\n                p3: rotate_point(0,0,36,{x:p3x,y:p3y}),\r\n                p4: rotate_point(0,0,36,{x:p4x,y:p4y})\r\n            },\r\n            side1b : {\r\n                p1: rotate_point(0,0,36,{x:p1xb,y:p1yb}),\r\n                p2: rotate_point(0,0,36,{x:p2xb,y:p2yb}),\r\n                p3: rotate_point(0,0,36,{x:p3xb,y:p3yb}),\r\n                p4: rotate_point(0,0,36,{x:p4xb,y:p4yb})\r\n            },\r\n        }\r\n    }\r\n    return faces[face][corner];\r\n}\r\n\r\nexport default CornerDimensions;","import {dToR,rotate_point} from './utils';\r\n\r\nconst EdgeDimensions = (size,face,edge,offset) =>{\r\n\r\n    Math.csc = function(x) { return 1 / Math.sin(x); }\r\n\r\n    let ratio = 2.25;\r\n    let xOffset1 = 0;\r\n    let xOffset2 = 0;\r\n\r\n    if(offset===1||offset===2){\r\n        size=size*1.05;\r\n        ratio=ratio*.975;\r\n        xOffset1=.05;\r\n        xOffset2=-.05;\r\n    }\r\n    //}\r\n\r\n    let halfPoint = ((size*ratio)-1)/2\r\n    let c = Math.csc(dToR(36))*halfPoint;\r\n    let x1 = c*Math.sin(dToR(54))\r\n    let y1 = 1+halfPoint;\r\n\r\n    let x2 = -x1*Math.cos(dToR(72*4))-y1*Math.sin(dToR(72*4));\r\n    let y2 = y1*Math.cos(dToR(72*4))+-x1*Math.sin(dToR(72*4));\r\n\r\n    let p1X = xOffset1;\r\n    let p1Y = size;\r\n\r\n    let p2X = xOffset2*Math.cos(dToR(72*4))-size*Math.sin(dToR(72*4));\r\n    let p2Y = size*Math.cos(dToR(72*4))+xOffset2*Math.sin(dToR(72*4));\r\n\r\n    let [newX1,newY1] = rotate_point(x1,y1,-144,{x:p1X,y:p1Y});\r\n    let [newX2,newY2] = rotate_point(x2,y2,144,{x:p2X,y:p2Y});\r\n\r\n    const faces = {\r\n        face1: {\r\n            edge1: {\r\n                p1 : [p1X, p1Y],\r\n                p2 : [x1,y1],\r\n                p3 : [x2,y2],\r\n                p4 : [p2X,p2Y],\r\n            },\r\n            edge2: {\r\n                p1 : [xOffset1*Math.cos(dToR(72*4))-size*Math.sin(dToR(72*4)),\r\n                    size*Math.cos(dToR(72*4))+xOffset1*Math.sin(dToR(72*4))],//c5p3\r\n                p2 : [xOffset2*Math.cos(dToR(72*3))-size*Math.sin(dToR(72*3)),\r\n                    size*Math.cos(dToR(72*3))+xOffset2*Math.sin(dToR(72*3))],//c4p3\r\n                p3 : [-x1*Math.cos(dToR(72*3))-y1*Math.sin(dToR(72*3)),\r\n                    y1*Math.cos(dToR(72*3))+-x1*Math.sin(dToR(72*3))],//c4p4\r\n                p4 : [x1*Math.cos(dToR(72*4))-y1*Math.sin(dToR(72*4)),\r\n                    y1*Math.cos(dToR(72*4))+x1*Math.sin(dToR(72*4))] //c5p2\r\n            },\r\n            edge3: {\r\n                p1 : [xOffset1*Math.cos(dToR(72*3))-size*Math.sin(dToR(72*3)),\r\n                    size*Math.cos(dToR(72*3))+xOffset1*Math.sin(dToR(72*3))],\r\n                p2 : [xOffset2*Math.cos(dToR(72*2))-size*Math.sin(dToR(72*2)),\r\n                    size*Math.cos(dToR(72*2))+xOffset2*Math.sin(dToR(72*2))],\r\n                p3 : [-x1*Math.cos(dToR(72*2))-y1*Math.sin(dToR(72*2)),\r\n                    y1*Math.cos(dToR(72*2))+-x1*Math.sin(dToR(72*2))],\r\n                p4 : [x1*Math.cos(dToR(72*3))-y1*Math.sin(dToR(72*3)),\r\n                    y1*Math.cos(dToR(72*3))+x1*Math.sin(dToR(72*3))]\r\n            },\r\n            edge4 : {\r\n                p1 : [xOffset1*Math.cos(dToR(72*2))-size*Math.sin(dToR(72*2)),\r\n                    size*Math.cos(dToR(72*2))+xOffset1*Math.sin(dToR(72*2))],\r\n                p2 : [xOffset2*Math.cos(dToR(72))-size*Math.sin(dToR(72)),\r\n                    size*Math.cos(dToR(72))+xOffset2*Math.sin(dToR(72))],\r\n                p3 : [-x1*Math.cos(dToR(72))-y1*Math.sin(dToR(72)),\r\n                    y1*Math.cos(dToR(72))+-x1*Math.sin(dToR(72))],\r\n                p4 : [x1*Math.cos(dToR(72*2))-y1*Math.sin(dToR(72*2)),\r\n                    y1*Math.cos(dToR(72*2))+x1*Math.sin(dToR(72*2))]\r\n            },\r\n            edge5 : {\r\n                p1 : [xOffset1*Math.cos(dToR(72))-size*Math.sin(dToR(72)),\r\n                    size*Math.cos(dToR(72))+xOffset1*Math.sin(dToR(72))],\r\n                p2 : [xOffset2, size],\r\n                p3 : [-x1,y1],\r\n                p4 : [x1*Math.cos(dToR(72))-y1*Math.sin(dToR(72)),\r\n                    y1*Math.cos(dToR(72))+x1*Math.sin(dToR(72))]\r\n            }\r\n        },\r\n        sides : {\r\n            side1 : {\r\n                p1 : rotate_point(0,0,36,{x:newX1,y:newY1}),\r\n                p2 : rotate_point(0,0,36,{x:x1,y:y1}),\r\n                p3 : rotate_point(0,0,36,{x:x2,y:y2}),\r\n                p4 : rotate_point(0,0,36,{x:newX2,y:newY2})\r\n            }\r\n        }\r\n    }\r\n\r\n    return faces[face][edge];\r\n\r\n\r\n}\r\n\r\nexport default EdgeDimensions;","// Changes decaObject directly\r\nlet swapColors = (face,deca,speed) =>{\r\n\r\n    // Pulls the hex color value from piece\r\n    let hex = piece => piece.material.color.getHex();\r\n\r\n    // Copies b's color to a\r\n    let setColor = (a,b) => a.material.color.set(hex(b));\r\n\r\n    // Variables used for rotating front colors\r\n    let front =  deca[face].front;\r\n    let tempColor = hex(front[3]);\r\n    let tempColor2 = hex(front[13]);\r\n\r\n    // Swaps all the front facing colors\r\n    if(speed>0){\r\n        setColor(front[3],front[5]);\r\n        setColor(front[5],front[7]);\r\n        setColor(front[7],front[9]);\r\n        setColor(front[9],front[11]);\r\n        front[11].material.color.set(tempColor);\r\n\r\n        setColor(front[13],front[15]);\r\n        setColor(front[15],front[17]);\r\n        setColor(front[17],front[19]);\r\n        setColor(front[19],front[21]);\r\n        front[21].material.color.set(tempColor2);\r\n    }else{\r\n        setColor(front[3],front[11]);\r\n        setColor(front[11],front[9]);\r\n        setColor(front[9],front[7]);\r\n        setColor(front[7],front[5]);\r\n        front[5].material.color.set(tempColor);\r\n\r\n        setColor(front[13],front[21]);\r\n        setColor(front[21],front[19]);\r\n        setColor(front[19],front[17]);\r\n        setColor(front[17],front[15]);\r\n        front[15].material.color.set(tempColor2);\r\n    }\r\n\r\n    // Converts color to side number\r\n    let side = color => {\r\n        let colors = {\r\n            \"blue\": 1,\r\n            \"pink\": 2,\r\n            \"yellow\": 3,\r\n            \"red\": 4,\r\n            \"green\": 5,\r\n            \"lightpurple\":6,\r\n            \"lightblue\":7,\r\n            \"lightbrown\":8,\r\n            \"lightgreen\":9,\r\n            \"orange\":10,\r\n            \"purple\":11,\r\n            \"white\":12\r\n        }\r\n        return colors[color];\r\n    }\r\n\r\n    // extracts piece information given side and piece numbers\r\n    let extractEdge = (sideColor,pieces) => {\r\n        return {\r\n            left: deca[`face${side(sideColor)}`].front[pieces[0]],\r\n            center: deca[`face${side(sideColor)}`].front[pieces[1]],\r\n            right: deca[`face${side(sideColor)}`].front[pieces[2]]\r\n        }\r\n    }\r\n\r\n    // Rotate colors around clockwise or counterclockwise depending on speed\r\n    let swap = (e1,e2,e3,e4,e5,speed) => {\r\n        let tempLeft = hex(e1.left);\r\n        let tempCenter = hex(e1.center);\r\n        let tempRight = hex(e1.right);\r\n\r\n        if(speed>0){\r\n            //left edge\r\n            setColor(e1.left,e2.left);\r\n            setColor(e2.left,e3.left);\r\n            setColor(e3.left,e4.left);\r\n            setColor(e4.left,e5.left);\r\n            e5.left.material.color.set(tempLeft);\r\n\r\n            //center edge\r\n            setColor(e1.center,e2.center);\r\n            setColor(e2.center,e3.center);\r\n            setColor(e3.center,e4.center);\r\n            setColor(e4.center,e5.center);\r\n            e5.center.material.color.set(tempCenter);\r\n\r\n            setColor(e1.right,e2.right);\r\n            setColor(e2.right,e3.right);\r\n            setColor(e3.right,e4.right);\r\n            setColor(e4.right,e5.right);\r\n            e5.right.material.color.set(tempRight);\r\n        }else{\r\n            //left edge\r\n            setColor(e1.left,e5.left);\r\n            setColor(e5.left,e4.left);\r\n            setColor(e4.left,e3.left);\r\n            setColor(e3.left,e2.left);\r\n            e2.left.material.color.set(tempLeft);\r\n\r\n            //center edge\r\n            setColor(e1.center,e5.center);\r\n            setColor(e5.center,e4.center);\r\n            setColor(e4.center,e3.center);\r\n            setColor(e3.center,e2.center);\r\n            e2.center.material.color.set(tempCenter);\r\n\r\n            setColor(e1.right,e5.right);\r\n            setColor(e5.right,e4.right);\r\n            setColor(e4.right,e3.right);\r\n            setColor(e3.right,e2.right);\r\n            e2.right.material.color.set(tempRight);\r\n        }\r\n    }\r\n\r\n    // Variables for edge data\r\n    let edge1,edge2,edge3,edge4,edge5;\r\n\r\n    // Controls which side edge colors will be rotated with each front face\r\n    switch(face){\r\n        \r\n        // Front half\r\n        case 'face1': // blue\r\n            edge1 = extractEdge(\"green\",[9,17,7]); \r\n            edge2 = extractEdge(\"red\",[9,17,7]);\r\n            edge3 = extractEdge(\"yellow\",[9,17,7]);\r\n            edge4 = extractEdge(\"pink\",[9,17,7]);\r\n            edge5 = extractEdge(\"lightpurple\",[9,17,7]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face2': // pink\r\n            edge1 = extractEdge(\"lightbrown\",[5,13,3]); \r\n            edge2 = extractEdge(\"lightpurple\",[11,19,9]);\r\n            edge3 = extractEdge(\"blue\",[11,19,9]);\r\n            edge4 = extractEdge(\"yellow\",[7,15,5]);\r\n            edge5 = extractEdge(\"lightgreen\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face3': // yellow\r\n            edge1 = extractEdge(\"lightgreen\",[5,13,3]); \r\n            edge2 = extractEdge(\"pink\",[11,19,9]);\r\n            edge3 = extractEdge(\"blue\",[9,17,7]);\r\n            edge4 = extractEdge(\"red\",[7,15,5]);\r\n            edge5 = extractEdge(\"orange\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face4': // red\r\n            edge1 = extractEdge(\"orange\",[5,13,3]); \r\n            edge2 = extractEdge(\"yellow\",[11,19,9]);\r\n            edge3 = extractEdge(\"blue\",[7,15,5]);\r\n            edge4 = extractEdge(\"green\",[7,15,5]);\r\n            edge5 = extractEdge(\"purple\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face5': // green\r\n            edge1 = extractEdge(\"purple\",[5,13,3]); \r\n            edge2 = extractEdge(\"red\",[11,19,9]);\r\n            edge3 = extractEdge(\"blue\",[5,13,3]);\r\n            edge4 = extractEdge(\"lightpurple\",[7,15,5]);\r\n            edge5 = extractEdge(\"white\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face6': // green\r\n            edge1 = extractEdge(\"white\",[5,13,3]); \r\n            edge2 = extractEdge(\"green\",[11,19,9]);\r\n            edge3 = extractEdge(\"blue\",[3,21,11]);\r\n            edge4 = extractEdge(\"pink\",[7,15,5]);\r\n            edge5 = extractEdge(\"lightbrown\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n        \r\n        // Back half\r\n        case 'face7': // light blue\r\n            edge1 = extractEdge(\"orange\",[9,17,7]); \r\n            edge2 = extractEdge(\"purple\",[9,17,7]);\r\n            edge3 = extractEdge(\"white\",[9,17,7]);\r\n            edge4 = extractEdge(\"lightbrown\",[9,17,7]);\r\n            edge5 = extractEdge(\"lightgreen\",[9,17,7]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face8': // light brown\r\n            edge1 = extractEdge(\"pink\",[5,13,3]); \r\n            edge2 = extractEdge(\"lightgreen\",[11,19,9]);\r\n            edge3 = extractEdge(\"lightblue\",[11,19,9]);\r\n            edge4 = extractEdge(\"white\",[7,15,5]);\r\n            edge5 = extractEdge(\"lightpurple\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face9': // light green\r\n            edge1 = extractEdge(\"yellow\",[5,13,3]); \r\n            edge2 = extractEdge(\"orange\",[11,19,9]);\r\n            edge3 = extractEdge(\"lightblue\",[3,21,11]);\r\n            edge4 = extractEdge(\"lightbrown\",[7,15,5]);\r\n            edge5 = extractEdge(\"pink\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face10': // orange\r\n            edge1 = extractEdge(\"red\",[5,13,3]); \r\n            edge2 = extractEdge(\"purple\",[11,19,9]);\r\n            edge3 = extractEdge(\"lightblue\",[5,13,3]);\r\n            edge4 = extractEdge(\"lightgreen\",[7,15,5]);\r\n            edge5 = extractEdge(\"yellow\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face11': // purple\r\n            edge1 = extractEdge(\"green\",[5,13,3]); \r\n            edge2 = extractEdge(\"white\",[11,19,9]);\r\n            edge3 = extractEdge(\"lightblue\",[7,15,5]);\r\n            edge4 = extractEdge(\"orange\",[7,15,5]);\r\n            edge5 = extractEdge(\"red\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face12': // yellow\r\n            edge1 = extractEdge(\"lightpurple\",[5,13,3]); \r\n            edge2 = extractEdge(\"lightbrown\",[11,19,9]);\r\n            edge3 = extractEdge(\"lightblue\",[9,17,7]);\r\n            edge4 = extractEdge(\"purple\",[7,15,5]);\r\n            edge5 = extractEdge(\"green\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n        default:\r\n    }\r\n}\r\n\r\nexport default swapColors;","let facesToHide = {\r\n    // Blue\r\n    face1 : [\r\n        // Pink side\r\n        {face:2,pos:6},{face:2,pos:7},\r\n        {face:2,pos:8},{face:2,pos:9},\r\n        {face:2,pos:16},{face:2,pos:17},\r\n\r\n        // Yellow side\r\n        {face:3,pos:6},{face:3,pos:7},\r\n        {face:3,pos:8},{face:3,pos:9},\r\n        {face:3,pos:16},{face:3,pos:17},\r\n\r\n        // Red side\r\n        {face:4,pos:6},{face:4,pos:7},\r\n        {face:4,pos:8},{face:4,pos:9},\r\n        {face:4,pos:16},{face:4,pos:17},\r\n\r\n        // Green side\r\n        {face:5,pos:6},{face:5,pos:7},\r\n        {face:5,pos:8},{face:5,pos:9},\r\n        {face:5,pos:16},{face:5,pos:17},\r\n\r\n        // Light purple side\r\n        {face:6,pos:6},{face:6,pos:7},\r\n        {face:6,pos:8},{face:6,pos:9},\r\n        {face:6,pos:16},{face:6,pos:17},\r\n    ],\r\n\r\n    // Pink\r\n    face2: [\r\n        // Blue side\r\n        {face:1,pos:8},{face:1,pos:9},\r\n        {face:1,pos:18},{face:1,pos:19},\r\n        {face:1,pos:10},{face:1,pos:11},\r\n        \r\n        // Yellow side\r\n        {face:3,pos:6},{face:3,pos:7},\r\n        {face:3,pos:14},{face:3,pos:15},\r\n        {face:3,pos:4},{face:3,pos:5},\r\n\r\n        // Light green side\r\n        {face:9,pos:10},{face:9,pos:11},\r\n        {face:9,pos:20},{face:9,pos:21},\r\n        {face:9,pos:2},{face:9,pos:3},\r\n\r\n        // Brown side\r\n        {face:8,pos:2},{face:8,pos:3},\r\n        {face:8,pos:12},{face:8,pos:13},\r\n        {face:8,pos:4},{face:8,pos:5},\r\n        \r\n        // Light purple side\r\n        {face:6,pos:8},{face:6,pos:9},\r\n        {face:6,pos:18},{face:6,pos:19},\r\n        {face:6,pos:10},{face:6,pos:11},\r\n    ],\r\n\r\n    // Yellow\r\n    face3: [\r\n        // Blue\r\n        {face:1,pos:6},{face:1,pos:7},\r\n        {face:1,pos:8},{face:1,pos:9},\r\n        {face:1,pos:16},{face:1,pos:17},\r\n\r\n        // Red\r\n        {face:4,pos:4},{face:4,pos:5},\r\n        {face:4,pos:14},{face:4,pos:15},\r\n        {face:4,pos:6},{face:4,pos:7},\r\n\r\n        // Orange\r\n        {face:10,pos:2},{face:10,pos:3},\r\n        {face:10,pos:20},{face:10,pos:21},\r\n        {face:10,pos:10},{face:10,pos:11},\r\n\r\n        // Green\r\n        {face:9,pos:4},{face:9,pos:5},\r\n        {face:9,pos:12},{face:9,pos:13},\r\n        {face:9,pos:2},{face:9,pos:3},\r\n\r\n        // Pink\r\n        {face:2,pos:10},{face:2,pos:11},\r\n        {face:2,pos:18},{face:2,pos:19},\r\n        {face:2,pos:8},{face:2,pos:9},\r\n    ],\r\n\r\n    // Red\r\n    face4: [\r\n        // Blue\r\n        {face:1,pos:6},{face:1,pos:7},\r\n        {face:1,pos:14},{face:1,pos:15},\r\n        {face:1,pos:4},{face:1,pos:5},\r\n\r\n        // Green\r\n        {face:5,pos:4},{face:5,pos:5},\r\n        {face:5,pos:14},{face:5,pos:15},\r\n        {face:5,pos:6},{face:5,pos:7},\r\n\r\n        // Purple\r\n        {face:11,pos:2},{face:11,pos:3},\r\n        {face:11,pos:20},{face:11,pos:21},\r\n        {face:11,pos:10},{face:11,pos:11},\r\n\r\n        // Orange\r\n        {face:10,pos:4},{face:10,pos:5},\r\n        {face:10,pos:12},{face:10,pos:13},\r\n        {face:10,pos:2},{face:10,pos:3},\r\n\r\n        // Yellow\r\n        {face:3,pos:10},{face:3,pos:11},\r\n        {face:3,pos:18},{face:3,pos:19},\r\n        {face:3,pos:8},{face:3,pos:9},\r\n    ],\r\n\r\n    // Green\r\n    face5: [\r\n        // Blue\r\n        {face:1,pos:4},{face:1,pos:5},\r\n        {face:1,pos:12},{face:1,pos:13},\r\n        {face:1,pos:2},{face:1,pos:3},\r\n\r\n        // Light purple\r\n        {face:6,pos:4},{face:6,pos:5},\r\n        {face:6,pos:14},{face:6,pos:15},\r\n        {face:6,pos:6},{face:6,pos:7},\r\n\r\n        // White\r\n        {face:12,pos:2},{face:12,pos:3},\r\n        {face:12,pos:20},{face:12,pos:21},\r\n        {face:12,pos:10},{face:12,pos:11},\r\n\r\n        // Purple\r\n        {face:11,pos:4},{face:11,pos:5},\r\n        {face:11,pos:12},{face:11,pos:13},\r\n        {face:11,pos:2},{face:11,pos:3},\r\n\r\n        // Red\r\n        {face:4,pos:10},{face:4,pos:11},\r\n        {face:4,pos:18},{face:4,pos:19},\r\n        {face:4,pos:8},{face:4,pos:9},\r\n    ],\r\n\r\n    // Light purple\r\n    face6: [\r\n        // Blue\r\n        {face:1,pos:2},{face:1,pos:3},\r\n        {face:1,pos:20},{face:1,pos:21},\r\n        {face:1,pos:10},{face:1,pos:11},\r\n\r\n        // Pink\r\n        {face:2,pos:4},{face:2,pos:5},\r\n        {face:2,pos:14},{face:2,pos:15},\r\n        {face:2,pos:6},{face:2,pos:7},\r\n\r\n        // Brown\r\n        {face:8,pos:2},{face:8,pos:3},\r\n        {face:8,pos:20},{face:8,pos:21},\r\n        {face:8,pos:10},{face:8,pos:11},\r\n\r\n        // White\r\n        {face:12,pos:4},{face:12,pos:5},\r\n        {face:12,pos:12},{face:12,pos:13},\r\n        {face:12,pos:2},{face:12,pos:3},\r\n\r\n        // Green\r\n        {face:5,pos:10},{face:5,pos:11},\r\n        {face:5,pos:18},{face:5,pos:19},\r\n        {face:5,pos:8},{face:5,pos:9},\r\n    ],\r\n\r\n    // Light Blue\r\n    face7 : [\r\n        // Brown side\r\n        {face:8,pos:6},{face:8,pos:7},\r\n        {face:8,pos:8},{face:8,pos:9},\r\n        {face:8,pos:16},{face:8,pos:17},\r\n\r\n        // Light green side\r\n        {face:9,pos:6},{face:9,pos:7},\r\n        {face:9,pos:8},{face:9,pos:9},\r\n        {face:9,pos:16},{face:9,pos:17},\r\n\r\n        // Orange side\r\n        {face:10,pos:6},{face:10,pos:7},\r\n        {face:10,pos:8},{face:10,pos:9},\r\n        {face:10,pos:16},{face:10,pos:17},\r\n\r\n        // Purple side\r\n        {face:11,pos:6},{face:11,pos:7},\r\n        {face:11,pos:8},{face:11,pos:9},\r\n        {face:11,pos:16},{face:11,pos:17},\r\n\r\n        // White purple side\r\n        {face:12,pos:6},{face:12,pos:7},\r\n        {face:12,pos:8},{face:12,pos:9},\r\n        {face:12,pos:16},{face:12,pos:17},\r\n    ],\r\n\r\n    // Brown\r\n    face8: [\r\n        // Light blue side\r\n        {face:7,pos:8},{face:7,pos:9},\r\n        {face:7,pos:18},{face:7,pos:19},\r\n        {face:7,pos:10},{face:7,pos:11},\r\n        \r\n        // White side\r\n        {face:12,pos:6},{face:12,pos:7},\r\n        {face:12,pos:14},{face:12,pos:15},\r\n        {face:12,pos:4},{face:12,pos:5},\r\n\r\n        // Light purple side\r\n        {face:6,pos:10},{face:6,pos:11},\r\n        {face:6,pos:20},{face:6,pos:21},\r\n        {face:6,pos:2},{face:6,pos:3},\r\n\r\n        // Pink side\r\n        {face:2,pos:2},{face:2,pos:3},\r\n        {face:2,pos:12},{face:2,pos:13},\r\n        {face:2,pos:4},{face:2,pos:5},\r\n        \r\n        // Light green side\r\n        {face:9,pos:8},{face:9,pos:9},\r\n        {face:9,pos:18},{face:9,pos:19},\r\n        {face:9,pos:10},{face:9,pos:11},\r\n    ],\r\n\r\n    // Light green\r\n    face9: [\r\n        // Light Blue\r\n        {face:7,pos:2},{face:7,pos:3},\r\n        {face:7,pos:10},{face:7,pos:11},\r\n        {face:7,pos:20},{face:7,pos:21},\r\n\r\n        // Brown\r\n        {face:8,pos:4},{face:8,pos:5},\r\n        {face:8,pos:14},{face:8,pos:15},\r\n        {face:8,pos:6},{face:8,pos:7},\r\n\r\n        // Pink\r\n        {face:2,pos:2},{face:2,pos:3},\r\n        {face:2,pos:20},{face:2,pos:21},\r\n        {face:2,pos:10},{face:2,pos:11},\r\n\r\n        // Yellow\r\n        {face:3,pos:4},{face:3,pos:5},\r\n        {face:3,pos:12},{face:3,pos:13},\r\n        {face:3,pos:2},{face:3,pos:3},\r\n\r\n        // Orange\r\n        {face:10,pos:10},{face:10,pos:11},\r\n        {face:10,pos:18},{face:10,pos:19},\r\n        {face:10,pos:8},{face:10,pos:9},\r\n    ],\r\n\r\n    // Orange\r\n    face10: [\r\n        // Light Blue\r\n        {face:7,pos:2},{face:7,pos:3},\r\n        {face:7,pos:12},{face:7,pos:13},\r\n        {face:7,pos:4},{face:7,pos:5},\r\n\r\n        // Light Green\r\n        {face:9,pos:4},{face:9,pos:5},\r\n        {face:9,pos:14},{face:9,pos:15},\r\n        {face:9,pos:6},{face:9,pos:7},\r\n\r\n        // Yellow\r\n        {face:3,pos:2},{face:3,pos:3},\r\n        {face:3,pos:20},{face:3,pos:21},\r\n        {face:3,pos:10},{face:3,pos:11},\r\n\r\n        // Red\r\n        {face:4,pos:4},{face:4,pos:5},\r\n        {face:4,pos:12},{face:4,pos:13},\r\n        {face:4,pos:2},{face:4,pos:3},\r\n\r\n        // Purple\r\n        {face:11,pos:10},{face:11,pos:11},\r\n        {face:11,pos:18},{face:11,pos:19},\r\n        {face:11,pos:8},{face:11,pos:9},\r\n    ],\r\n\r\n    // Purple\r\n    face11: [\r\n        // Light Blue\r\n        {face:7,pos:4},{face:7,pos:5},\r\n        {face:7,pos:14},{face:7,pos:15},\r\n        {face:7,pos:6},{face:7,pos:7},\r\n\r\n        // Orange\r\n        {face:10,pos:4},{face:10,pos:5},\r\n        {face:10,pos:14},{face:10,pos:15},\r\n        {face:10,pos:6},{face:10,pos:7},\r\n\r\n        // Red\r\n        {face:4,pos:2},{face:4,pos:3},\r\n        {face:4,pos:20},{face:4,pos:21},\r\n        {face:4,pos:10},{face:4,pos:11},\r\n\r\n        // Green\r\n        {face:5,pos:4},{face:5,pos:5},\r\n        {face:5,pos:12},{face:5,pos:13},\r\n        {face:5,pos:2},{face:5,pos:3},\r\n\r\n        // White\r\n        {face:12,pos:10},{face:12,pos:11},\r\n        {face:12,pos:18},{face:12,pos:19},\r\n        {face:12,pos:8},{face:12,pos:9},\r\n    ],\r\n\r\n    // White\r\n    face12: [\r\n        // Light Blue\r\n        {face:7,pos:8},{face:7,pos:9},\r\n        {face:7,pos:16},{face:7,pos:17},\r\n        {face:7,pos:6},{face:7,pos:7},\r\n\r\n        // Purple\r\n        {face:11,pos:4},{face:11,pos:5},\r\n        {face:11,pos:14},{face:11,pos:15},\r\n        {face:11,pos:6},{face:11,pos:7},\r\n\r\n        // Green\r\n        {face:5,pos:2},{face:5,pos:3},\r\n        {face:5,pos:20},{face:5,pos:21},\r\n        {face:5,pos:10},{face:5,pos:11},\r\n\r\n        // Light purple\r\n        {face:6,pos:4},{face:6,pos:5},\r\n        {face:6,pos:12},{face:6,pos:13},\r\n        {face:6,pos:2},{face:6,pos:3},\r\n\r\n        // Brown\r\n        {face:8,pos:10},{face:8,pos:11},\r\n        {face:8,pos:18},{face:8,pos:19},\r\n        {face:8,pos:8},{face:8,pos:9},\r\n    ]\r\n}\r\n\r\nexport default facesToHide;","let colorMatchUps = {\r\n    face1 : { // blue\r\n        //center edge\r\n        \"1\" : {side: 5,pos: 17},\r\n        \"3\" : {side: 4,pos: 17},\r\n        \"5\" : {side: 3,pos: 17},\r\n        \"7\" : {side: 2,pos: 17},\r\n        \"9\" : {side: 6,pos: 17},\r\n\r\n        //left edge\r\n        \"11\": {side: 5,pos:  9},\r\n        \"13\": {side: 4,pos:  9},\r\n        \"15\": {side: 3,pos:  9},\r\n        \"17\": {side: 2,pos:  9},\r\n        \"19\": {side: 6,pos:  9},\r\n\r\n        //right edge\r\n        \"21\": {side: 5,pos:  7},\r\n        \"23\": {side: 4,pos:  7},\r\n        \"25\": {side: 3,pos:  7},\r\n        \"27\": {side: 2,pos:  7},\r\n        \"29\": {side: 6,pos:  7},\r\n    },\r\n    face2 : { // pink\r\n        //center edge\r\n        \"1\": {side:8,pos:13},\r\n        \"3\": {side:6,pos:19},\r\n        \"5\": {side:1,pos:19},\r\n        \"7\": {side:3,pos:15},\r\n        \"9\": {side:9,pos:21},\r\n\r\n        //left edge\r\n        \"11\": {side: 8,pos:  5},\r\n        \"13\": {side: 6,pos:  11},\r\n        \"15\": {side: 1,pos:  11},\r\n        \"17\": {side: 3,pos:  7},\r\n        \"19\": {side: 9,pos:  3},\r\n\r\n        //right edge\r\n        \"21\": {side: 8,pos:  3},\r\n        \"23\": {side: 6,pos:  9},\r\n        \"25\": {side: 1,pos:  9},\r\n        \"27\": {side: 3,pos:  5},\r\n        \"29\": {side: 9,pos:  11},\r\n    },\r\n    face3 : { // Yellow\r\n        //center edge\r\n        \"1\": {side:9,pos:13},\r\n        \"3\": {side:2,pos:19},\r\n        \"5\": {side:1,pos:17},\r\n        \"7\": {side:4,pos:15},\r\n        \"9\": {side:10,pos:21},\r\n\r\n        //left edge\r\n        \"11\": {side: 9,pos:  5},\r\n        \"13\": {side: 2,pos:  11},\r\n        \"15\": {side: 1,pos:  9},\r\n        \"17\": {side: 4,pos:  7},\r\n        \"19\": {side: 10,pos:  3},\r\n\r\n        //right edge\r\n        \"21\": {side: 9,pos:  3},\r\n        \"23\": {side: 2,pos:  9},\r\n        \"25\": {side: 1,pos:  7},\r\n        \"27\": {side: 4,pos:  5},\r\n        \"29\": {side: 10,pos:  11},\r\n    },\r\n    face4 : { // Red\r\n        //center edge\r\n        \"1\": {side:10,pos:13},\r\n        \"3\": {side:3,pos:19},\r\n        \"5\": {side:1,pos:15},\r\n        \"7\": {side:5,pos:15},\r\n        \"9\": {side:11,pos:21},\r\n\r\n        //left edge\r\n        \"11\": {side: 10,pos:  5},\r\n        \"13\": {side: 3,pos:  11},\r\n        \"15\": {side: 1,pos:  7},\r\n        \"17\": {side: 5,pos:  7},\r\n        \"19\": {side: 11,pos:  3},\r\n\r\n        //right edge\r\n        \"21\": {side: 10,pos:  3},\r\n        \"23\": {side: 3,pos:  9},\r\n        \"25\": {side: 1,pos:  5},\r\n        \"27\": {side: 5,pos:  5},\r\n        \"29\": {side: 11,pos:  11},\r\n    },\r\n    face5 : { // Green\r\n        //center edge\r\n        \"1\": {side:11,pos:13},\r\n        \"3\": {side:4,pos:19},\r\n        \"5\": {side:1,pos:13},\r\n        \"7\": {side:6,pos:15},\r\n        \"9\": {side:12,pos:21},\r\n\r\n        //left edge\r\n        \"11\": {side: 11,pos:  5},\r\n        \"13\": {side: 4,pos:  11},\r\n        \"15\": {side: 1,pos:  5},\r\n        \"17\": {side: 6,pos:  7},\r\n        \"19\": {side: 12,pos:  3},\r\n\r\n        //right edge\r\n        \"21\": {side: 11,pos:  3},\r\n        \"23\": {side: 4,pos:  9},\r\n        \"25\": {side: 1,pos:  3},\r\n        \"27\": {side: 6,pos:  5},\r\n        \"29\": {side: 12,pos:  11},\r\n    },\r\n    face6 : { // Light purple\r\n        //center edge\r\n        \"1\": {side:12,pos:13},\r\n        \"3\": {side:5,pos:19},\r\n        \"5\": {side:1,pos:21},\r\n        \"7\": {side:2,pos:15},\r\n        \"9\": {side:8,pos:21},\r\n\r\n        //left edge\r\n        \"11\": {side: 12,pos:  5},\r\n        \"13\": {side: 5,pos:  11},\r\n        \"15\": {side: 1,pos:  3},\r\n        \"17\": {side: 2,pos:  7},\r\n        \"19\": {side: 8,pos:  3},\r\n\r\n        //right edge\r\n        \"21\": {side: 12,pos:  3},\r\n        \"23\": {side: 5,pos:  9},\r\n        \"25\": {side: 1,pos:  11},\r\n        \"27\": {side: 2,pos:  5},\r\n        \"29\": {side: 8,pos:  11},\r\n    },\r\n    face7 : { // Light blue\r\n        \"1\": {side:10, pos:17},\r\n        \"3\": {side:11, pos:17},\r\n        \"5\": {side:12, pos:17},\r\n        \"7\": {side:8, pos:17},\r\n        \"9\": {side:9, pos:17},\r\n\r\n        \"11\": {side:10, pos:9},\r\n        \"13\": {side:11, pos:9},\r\n        \"15\": {side:12, pos:9},\r\n        \"17\": {side:8, pos:9},\r\n        \"19\": {side:9, pos:9},\r\n\r\n        \"21\": {side:10, pos:7},\r\n        \"23\": {side:11, pos:7},\r\n        \"25\": {side:12, pos:7},\r\n        \"27\": {side:8, pos:7},\r\n        \"29\": {side:9, pos:7}\r\n    },\r\n    face8 : {// Brown\r\n        //center edge\r\n        \"1\": {side:2,pos:13},\r\n        \"3\": {side:9,pos:19},\r\n        \"5\": {side:7,pos:19},\r\n        \"7\": {side:12,pos:15},\r\n        \"9\": {side:6,pos:21},\r\n\r\n        //left edge\r\n        \"11\": {side: 2,pos:  5},\r\n        \"13\": {side: 9,pos:  11},\r\n        \"15\": {side: 7,pos:  11},\r\n        \"17\": {side: 12,pos:  7},\r\n        \"19\": {side: 6,pos:  3},\r\n\r\n        //right edge\r\n        \"21\": {side: 2,pos:  3},\r\n        \"23\": {side: 9,pos:  9},\r\n        \"25\": {side: 7,pos:  9},\r\n        \"27\": {side: 12,pos:  5},\r\n        \"29\": {side: 6,pos:  11}\r\n\r\n    },\r\n    face9 : { // Light green\r\n        //center edge\r\n        \"1\": {side:3,pos:13},\r\n        \"3\": {side:10,pos:19},\r\n        \"5\": {side:7,pos:21},\r\n        \"7\": {side:8,pos:15},\r\n        \"9\": {side:2,pos:21},\r\n\r\n        //left edge\r\n        \"11\": {side: 3,pos:  5},\r\n        \"13\": {side: 10,pos:  11},\r\n        \"15\": {side: 7,pos:  3},\r\n        \"17\": {side: 8,pos:  7},\r\n        \"19\": {side: 2,pos:  3},\r\n\r\n        //right edge\r\n        \"21\": {side: 3,pos:  3},\r\n        \"23\": {side: 10,pos:  9},\r\n        \"25\": {side: 7,pos:  11},\r\n        \"27\": {side: 8,pos:  5},\r\n        \"29\": {side: 2,pos:  11},\r\n    },\r\n    face10 : { // Orange\r\n        //center edge\r\n        \"1\": {side:4,pos:13},\r\n        \"3\": {side:11,pos:19},\r\n        \"5\": {side:7,pos:13},\r\n        \"7\": {side:9,pos:15},\r\n        \"9\": {side:3,pos:21},\r\n\r\n        //left edge\r\n        \"11\": {side: 4,pos:  5},\r\n        \"13\": {side: 11,pos:  11},\r\n        \"15\": {side: 7,pos:  5},\r\n        \"17\": {side: 9,pos:  7},\r\n        \"19\": {side: 3,pos:  3},\r\n\r\n        //right edge\r\n        \"21\": {side: 4,pos:  3},\r\n        \"23\": {side: 11,pos:  9},\r\n        \"25\": {side: 7,pos:  3},\r\n        \"27\": {side: 9,pos:  5},\r\n        \"29\": {side: 3,pos:  11},\r\n    },\r\n    face11 : { // Purple\r\n        //center edge\r\n        \"1\": {side:5,pos:13},\r\n        \"3\": {side:12,pos:19},\r\n        \"5\": {side:7,pos:15},\r\n        \"7\": {side:10,pos:15},\r\n        \"9\": {side:4,pos:21},\r\n\r\n        //left edge\r\n        \"11\": {side: 5,pos:  5},\r\n        \"13\": {side: 12,pos:  11},\r\n        \"15\": {side: 7,pos:  7},\r\n        \"17\": {side: 10,pos:  7},\r\n        \"19\": {side: 4,pos:  3},\r\n\r\n        //right edge\r\n        \"21\": {side: 5,pos:  3},\r\n        \"23\": {side: 12,pos:  9},\r\n        \"25\": {side: 7,pos:  5},\r\n        \"27\": {side: 10,pos:  5},\r\n        \"29\": {side: 4,pos:  11},\r\n    },\r\n    face12 : { // White\r\n        //center edge\r\n        \"1\": {side:6,pos:13},\r\n        \"3\": {side:8,pos:19},\r\n        \"5\": {side:7,pos:17},\r\n        \"7\": {side:11,pos:15},\r\n        \"9\": {side:5,pos:21},\r\n\r\n        //left edge\r\n        \"11\": {side: 6,pos:  5},\r\n        \"13\": {side: 8,pos:  11},\r\n        \"15\": {side: 7,pos:  9},\r\n        \"17\": {side: 11,pos:  7},\r\n        \"19\": {side: 5,pos:  3},\r\n\r\n        //right edge\r\n        \"21\": {side: 6,pos:  3},\r\n        \"23\": {side: 8,pos:  9},\r\n        \"25\": {side: 7,pos:  7},\r\n        \"27\": {side: 11,pos:  5},\r\n        \"29\": {side: 5,pos:  11},\r\n    }\r\n}\r\n\r\nexport default colorMatchUps;","import {dToR} from \"./utils.js\";\r\n\r\nlet faceTilt = -63.75;\r\nlet zOffset = 2.92;\r\nlet facePos = [\r\n    \r\n    {\r\n        translate : {z:zOffset},\r\n        rotate : 0\r\n    },\r\n    {\r\n        translate: {y:2*2.25*Math.cos(dToR(36)),z:zOffset},\r\n        rotate: {z:dToR(36+72),x:dToR(faceTilt)}\r\n    },\r\n    {\r\n        translate: {y:2*2.25*Math.cos(dToR(36)),z:zOffset},\r\n        rotate: {z:dToR(36+72*2),x:dToR(faceTilt)}\r\n    },\r\n    {\r\n        translate: {y:2*2.25*Math.cos(dToR(36)),z:zOffset},\r\n        rotate: {z:dToR(36+72*3),x:dToR(faceTilt)}\r\n    },\r\n    {\r\n        translate: {y:2*2.25*Math.cos(dToR(36)),z:zOffset},\r\n        rotate: {z:dToR(36+72*4),x:dToR(faceTilt)}\r\n    },\r\n    {\r\n        translate: {y:2*2.25*Math.cos(dToR(36)),z:zOffset},\r\n        rotate: {z:dToR(36+72*5),x:dToR(faceTilt)}\r\n    },\r\n    {\r\n        translate : {z:-zOffset},\r\n        rotate : {z:dToR(180),y:dToR(180)}\r\n    },\r\n    {\r\n        translate: {y:2*2.25*Math.cos(dToR(36)),z:-zOffset},\r\n        rotate: {z:dToR(72),x:dToR(faceTilt),y:dToR(180)}\r\n    },\r\n    {\r\n        translate: {y:2*2.25*Math.cos(dToR(36)),z:-zOffset},\r\n        rotate: {z:dToR(72*2),x:dToR(faceTilt),y:dToR(180)}\r\n    },\r\n    {\r\n        translate: {y:2*2.25*Math.cos(dToR(36)),z:-zOffset},\r\n        rotate: {z:dToR(72*3),x:dToR(faceTilt),y:dToR(180)}\r\n    },\r\n    {\r\n        translate: {y:2*2.25*Math.cos(dToR(36)),z:-zOffset},\r\n        rotate: {z:dToR(72*4),x:dToR(faceTilt),y:dToR(180)}\r\n    },\r\n    {\r\n        translate: {y:2*2.25*Math.cos(dToR(36)),z:-zOffset},\r\n        rotate: {z:dToR(72*5),x:dToR(faceTilt),y:dToR(180)}\r\n    },\r\n]\r\n\r\nexport default facePos;","import {rotate_point,rToD} from \"./utils.js\";\r\n\r\n// Calculates what turn to make when attempting to move a piece\r\nfunction calculateTurn(startPoint,newPoint,selectedSide,selectedPiece,touchedEdge){\r\n    if(!newPoint) return;\r\n    // Mouse/Touch turns for edges\r\n    if(selectedPiece===8){\r\n        let difX = newPoint.x-startPoint.x;\r\n        let turnDirection = difX>0?\"\":\"'\";\r\n        if(touchedEdge||Math.abs(difX)>.2){\r\n            if(selectedSide===\"blue\"){\r\n                return \"3\"+turnDirection;\r\n            }\r\n            else if(selectedSide===\"pink\"){\r\n                return \"1\"+turnDirection;\r\n            }\r\n            else if(selectedSide===\"yellow\"){\r\n                return \"1\"+turnDirection;\r\n            }\r\n            else if(selectedSide===\"red\"){\r\n                return \"1\"+turnDirection;\r\n            }\r\n            else if(selectedSide===\"green\"){\r\n                return \"1\"+turnDirection;\r\n            }\r\n            else if(selectedSide===\"lightpurple\"){\r\n                return \"1\"+turnDirection;\r\n            }\r\n            else if(selectedSide===\"lightblue\"){\r\n                return \"12\"+turnDirection;\r\n            }\r\n            else if(selectedSide===\"lightbrown\"){\r\n                return \"7\"+turnDirection;\r\n            }\r\n            else if(selectedSide===\"lightgreen\"){\r\n                return \"7\"+turnDirection;\r\n            }\r\n            else if(selectedSide===\"orange\"){\r\n                return \"7\"+turnDirection;\r\n            }\r\n            else if(selectedSide===\"purple\"){\r\n                return \"7\"+turnDirection;\r\n            }\r\n            else if(selectedSide===\"white\"){\r\n                return \"7\"+turnDirection;\r\n            }\r\n        }\r\n    }\r\n    else if(selectedPiece===9){\r\n        let newStart = rotate_point(0,0,72,{...startPoint});\r\n        let newCurrent = rotate_point(0,0,72,{...newPoint});\r\n        let difX = newCurrent[0]-newStart[0];\r\n        let turnDirection = difX>0?\"\":\"'\";\r\n        if(touchedEdge||Math.abs(difX)>.2){\r\n            if(selectedSide===\"blue\") return \"2\"+turnDirection;\r\n            else if(selectedSide===\"pink\") return \"3\"+turnDirection;\r\n            else if(selectedSide===\"yellow\") return \"4\"+turnDirection;\r\n            else if(selectedSide===\"red\") return \"5\"+turnDirection;\r\n            else if(selectedSide===\"green\") return \"6\"+turnDirection;\r\n            else if(selectedSide===\"lightpurple\") return \"2\"+turnDirection;\r\n\r\n            else if(selectedSide===\"lightblue\") return \"8\"+turnDirection;\r\n            else if(selectedSide===\"lightbrown\") return \"12\"+turnDirection;\r\n            else if(selectedSide===\"lightgreen\") return \"8\"+turnDirection;\r\n            else if(selectedSide===\"orange\") return \"9\"+turnDirection;\r\n            else if(selectedSide===\"purple\") return \"10\"+turnDirection;\r\n            else if(selectedSide===\"white\") return \"11\"+turnDirection;\r\n        }\r\n    }\r\n    else if(selectedPiece===10){\r\n        let newStart = rotate_point(0,0,72*2,{...startPoint});\r\n        let newCurrent = rotate_point(0,0,72*2,{...newPoint});\r\n        let difX = newCurrent[0]-newStart[0];\r\n        let turnDirection = difX>0?\"\":\"'\";\r\n        if(touchedEdge||Math.abs(difX)>.2){\r\n            if(selectedSide===\"blue\") return \"6\"+turnDirection;\r\n            else if(selectedSide===\"pink\") return \"9\"+turnDirection;\r\n            else if(selectedSide===\"yellow\") return \"10\"+turnDirection;\r\n            else if(selectedSide===\"red\") return \"11\"+turnDirection;\r\n            else if(selectedSide===\"green\") return \"12\"+turnDirection;\r\n            else if(selectedSide===\"lightpurple\") return \"8\"+turnDirection;\r\n\r\n            else if(selectedSide===\"lightblue\") return \"9\"+turnDirection;\r\n            else if(selectedSide===\"lightbrown\") return \"6\"+turnDirection;\r\n            else if(selectedSide===\"lightgreen\") return \"2\"+turnDirection;\r\n            else if(selectedSide===\"orange\") return \"3\"+turnDirection;\r\n            else if(selectedSide===\"purple\") return \"4\"+turnDirection;\r\n            else if(selectedSide===\"white\") return \"5\"+turnDirection;\r\n        }\r\n    }\r\n    else if(selectedPiece===6){\r\n        let newStart = rotate_point(0,0,72*3,{...startPoint});\r\n        let newCurrent = rotate_point(0,0,72*3,{...newPoint});\r\n        let difX = newCurrent[0]-newStart[0];\r\n        let turnDirection = difX>0?\"\":\"'\";\r\n        if(touchedEdge||Math.abs(difX)>.2){\r\n            if(selectedSide===\"blue\")return \"5\"+turnDirection;\r\n            else if(selectedSide===\"pink\") return \"8\"+turnDirection;\r\n            else if(selectedSide===\"yellow\") return \"9\"+turnDirection;\r\n            else if(selectedSide===\"red\") return \"10\"+turnDirection;\r\n            else if(selectedSide===\"green\") return \"11\"+turnDirection;\r\n            else if(selectedSide===\"lightpurple\") return \"12\"+turnDirection;\r\n\r\n            else if(selectedSide===\"lightblue\") return \"10\"+turnDirection;\r\n            else if(selectedSide===\"lightbrown\") return \"2\"+turnDirection;\r\n            else if(selectedSide===\"lightgreen\") return \"3\"+turnDirection;\r\n            else if(selectedSide===\"orange\") return \"4\"+turnDirection;\r\n            else if(selectedSide===\"purple\") return \"5\"+turnDirection;\r\n            else if(selectedSide===\"white\") return \"6\"+turnDirection;\r\n        }\r\n    }\r\n    else if(selectedPiece===7){\r\n        let newStart = rotate_point(0,0,72*4,{...startPoint});\r\n        let newCurrent = rotate_point(0,0,72*4,{...newPoint});\r\n        let difX = newCurrent[0]-newStart[0];\r\n        let turnDirection = difX>0?\"\":\"'\";\r\n        if(touchedEdge||Math.abs(difX)>.2){\r\n            if(selectedSide===\"blue\")return \"4\"+turnDirection;\r\n            else if(selectedSide===\"pink\") return \"6\"+turnDirection;\r\n            else if(selectedSide===\"yellow\") return \"2\"+turnDirection;\r\n            else if(selectedSide===\"red\") return \"3\"+turnDirection;\r\n            else if(selectedSide===\"green\") return \"4\"+turnDirection;\r\n            else if(selectedSide===\"lightpurple\") return \"5\"+turnDirection;\r\n\r\n            else if(selectedSide===\"lightblue\") return \"11\"+turnDirection;\r\n            else if(selectedSide===\"lightbrown\") return \"9\"+turnDirection;\r\n            else if(selectedSide===\"lightgreen\") return \"10\"+turnDirection;\r\n            else if(selectedSide===\"orange\") return \"11\"+turnDirection;\r\n            else if(selectedSide===\"purple\") return \"12\"+turnDirection;\r\n            else if(selectedSide===\"white\") return \"8\"+turnDirection;\r\n        }\r\n    }\r\n\r\n    // Mouse/Touch turns for corners\r\n    else if (selectedPiece===3){\r\n        let angle = Math.atan2((newPoint.y-startPoint.y),(newPoint.x-startPoint.x));\r\n        let degrees = rToD(angle);\r\n        let dist = Math.hypot(newPoint.x-startPoint.x, newPoint.y-startPoint.y);\r\n\r\n        if(degrees<0) degrees = 360+degrees;\r\n\r\n        if(touchedEdge||dist>.2){\r\n            if(selectedSide===\"blue\"){\r\n                if(degrees>=36&&degrees<126) return \"4\";\r\n                if(degrees>=126&&degrees<216) return \"3'\";\r\n                if(degrees>=216&&degrees<306) return \"4'\";\r\n                if(degrees>=306||degrees<36) return \"3\";\r\n            }\r\n            if(selectedSide===\"pink\"){\r\n                if(degrees>=36&&degrees<126) return \"6\";\r\n                if(degrees>=126&&degrees<216) return \"1'\";\r\n                if(degrees>=216&&degrees<306) return \"6'\";\r\n                if(degrees>=306||degrees<36) return \"1\";\r\n            }\r\n            if(selectedSide===\"yellow\"){\r\n                if(degrees>=36&&degrees<126) return \"2\";\r\n                if(degrees>=126&&degrees<216) return \"1'\";\r\n                if(degrees>=216&&degrees<306) return \"2'\";\r\n                if(degrees>=306||degrees<36) return \"1\";\r\n            }\r\n            if(selectedSide===\"red\"){\r\n                if(degrees>=36&&degrees<126) return \"3\";\r\n                if(degrees>=126&&degrees<216) return \"1'\";\r\n                if(degrees>=216&&degrees<306) return \"3'\";\r\n                if(degrees>=306||degrees<36) return \"1\";\r\n            }\r\n            if(selectedSide===\"green\"){\r\n                if(degrees>=36&&degrees<126) return \"4\";\r\n                if(degrees>=126&&degrees<216) return \"1'\";\r\n                if(degrees>=216&&degrees<306) return \"4'\";\r\n                if(degrees>=306||degrees<36) return \"1\";\r\n            }\r\n            if(selectedSide===\"lightpurple\"){\r\n                if(degrees>=36&&degrees<126) return \"5\";\r\n                if(degrees>=126&&degrees<216) return \"1'\";\r\n                if(degrees>=216&&degrees<306) return \"5'\";\r\n                if(degrees>=306||degrees<36) return \"1\";\r\n            }\r\n            if(selectedSide===\"lightblue\"){\r\n                if(degrees>=36&&degrees<126) return \"11\";\r\n                if(degrees>=126&&degrees<216) return \"12'\";\r\n                if(degrees>=216&&degrees<306) return \"11'\";\r\n                if(degrees>=306||degrees<36) return \"12\";\r\n            }\r\n            if(selectedSide===\"lightbrown\"){\r\n                if(degrees>=36&&degrees<126) return \"9\";\r\n                if(degrees>=126&&degrees<216) return \"7'\";\r\n                if(degrees>=216&&degrees<306) return \"9'\";\r\n                if(degrees>=306||degrees<36) return \"7\";\r\n            }\r\n            if(selectedSide===\"lightgreen\"){\r\n                if(degrees>=36&&degrees<126) return \"10\";\r\n                if(degrees>=126&&degrees<216) return \"7'\";\r\n                if(degrees>=216&&degrees<306) return \"10'\";\r\n                if(degrees>=306||degrees<36) return \"7\";\r\n            }\r\n            if(selectedSide===\"orange\"){\r\n                if(degrees>=36&&degrees<126) return \"11\";\r\n                if(degrees>=126&&degrees<216) return \"7'\";\r\n                if(degrees>=216&&degrees<306) return \"11'\";\r\n                if(degrees>=306||degrees<36) return \"7\";\r\n            }\r\n            if(selectedSide===\"purple\"){\r\n                if(degrees>=36&&degrees<126) return \"12\";\r\n                if(degrees>=126&&degrees<216) return \"7'\";\r\n                if(degrees>=216&&degrees<306) return \"12'\";\r\n                if(degrees>=306||degrees<36) return \"7\";\r\n            }\r\n            if(selectedSide===\"white\"){\r\n                if(degrees>=36&&degrees<126) return \"8\";\r\n                if(degrees>=126&&degrees<216) return \"7'\";\r\n                if(degrees>=216&&degrees<306) return \"8'\";\r\n                if(degrees>=306||degrees<36) return \"7\";\r\n            }\r\n        }\r\n    }\r\n    else if (selectedPiece===4){\r\n        let newStart = rotate_point(0,0,72,{...startPoint});\r\n        let newCurrent = rotate_point(0,0,72,{...newPoint});\r\n        let angle = Math.atan2((newCurrent[1]-newStart[1]),(newCurrent[0]-newStart[0]));\r\n        let degrees = rToD(angle);\r\n        let dist = Math.hypot(newCurrent[0]-newStart[0], newCurrent[1]-newStart[1]);\r\n\r\n        if(degrees<0) degrees = 360+degrees;\r\n\r\n        if(touchedEdge||dist>.2){\r\n            if(selectedSide===\"blue\"){\r\n                if(degrees>=36&&degrees<126) return \"3\";\r\n                if(degrees>=126&&degrees<216) return \"2'\";\r\n                if(degrees>=216&&degrees<306) return \"3'\";\r\n                if(degrees>=306||degrees<36) return \"2\";\r\n            }\r\n            if(selectedSide===\"pink\"){\r\n                if(degrees>=36&&degrees<126) return \"1\";\r\n                if(degrees>=126&&degrees<216) return \"3'\";\r\n                if(degrees>=216&&degrees<306) return \"1'\";\r\n                if(degrees>=306||degrees<36) return \"3\";\r\n            }\r\n            if(selectedSide===\"yellow\"){\r\n                if(degrees>=36&&degrees<126) return \"1\";\r\n                if(degrees>=126&&degrees<216) return \"4'\";\r\n                if(degrees>=216&&degrees<306) return \"1'\";\r\n                if(degrees>=306||degrees<36) return \"4\";\r\n            }\r\n            if(selectedSide===\"red\"){\r\n                if(degrees>=36&&degrees<126) return \"1\";\r\n                if(degrees>=126&&degrees<216) return \"5'\";\r\n                if(degrees>=216&&degrees<306) return \"1'\";\r\n                if(degrees>=306||degrees<36) return \"5\";\r\n            }\r\n            if(selectedSide===\"green\"){\r\n                if(degrees>=36&&degrees<126) return \"1\";\r\n                if(degrees>=126&&degrees<216) return \"6'\";\r\n                if(degrees>=216&&degrees<306) return \"1'\";\r\n                if(degrees>=306||degrees<36) return \"6\";\r\n            }\r\n            if(selectedSide===\"lightpurple\"){\r\n                if(degrees>=36&&degrees<126) return \"1\";\r\n                if(degrees>=126&&degrees<216) return \"2'\";\r\n                if(degrees>=216&&degrees<306) return \"1'\";\r\n                if(degrees>=306||degrees<36) return \"2\";\r\n            }\r\n            if(selectedSide===\"lightblue\"){\r\n                if(degrees>=36&&degrees<126) return \"12\";\r\n                if(degrees>=126&&degrees<216) return \"8'\";\r\n                if(degrees>=216&&degrees<306) return \"12'\";\r\n                if(degrees>=306||degrees<36) return \"8\";\r\n            }\r\n            if(selectedSide===\"lightbrown\"){\r\n                if(degrees>=36&&degrees<126) return \"7\";\r\n                if(degrees>=126&&degrees<216) return \"12'\";\r\n                if(degrees>=216&&degrees<306) return \"7'\";\r\n                if(degrees>=306||degrees<36) return \"12\";\r\n            }\r\n            if(selectedSide===\"lightgreen\"){\r\n                if(degrees>=36&&degrees<126) return \"7\";\r\n                if(degrees>=126&&degrees<216) return \"8'\";\r\n                if(degrees>=216&&degrees<306) return \"7'\";\r\n                if(degrees>=306||degrees<36) return \"8\";\r\n            }\r\n            if(selectedSide===\"orange\"){\r\n                if(degrees>=36&&degrees<126) return \"7\";\r\n                if(degrees>=126&&degrees<216) return \"9'\";\r\n                if(degrees>=216&&degrees<306) return \"7'\";\r\n                if(degrees>=306||degrees<36) return \"9\";\r\n            }\r\n            if(selectedSide===\"purple\"){\r\n                if(degrees>=36&&degrees<126)return \"7\";\r\n                if(degrees>=126&&degrees<216) return \"10'\";\r\n                if(degrees>=216&&degrees<306) return \"7'\";\r\n                if(degrees>=306||degrees<36) return \"10\";\r\n            }\r\n            if(selectedSide===\"white\"){\r\n                if(degrees>=36&&degrees<126)return \"7\";\r\n                if(degrees>=126&&degrees<216) return \"11'\";\r\n                if(degrees>=216&&degrees<306) return \"7'\";\r\n                if(degrees>=306||degrees<36) return \"11\";\r\n            }\r\n        }\r\n    }\r\n    else if (selectedPiece===5){\r\n        let newStart = rotate_point(0,0,72*2,{...startPoint});\r\n        let newCurrent = rotate_point(0,0,72*2,{...newPoint});\r\n        let angle = Math.atan2((newCurrent[1]-newStart[1]),(newCurrent[0]-newStart[0]));\r\n        let degrees = rToD(angle);\r\n        let dist = Math.hypot(newCurrent[0]-newStart[0], newCurrent[1]-newStart[1]);\r\n        \r\n        if(degrees<0) degrees = 360+degrees;\r\n\r\n        if(touchedEdge||dist>.2){\r\n            if(selectedSide===\"blue\"){\r\n                if(degrees>=36&&degrees<126) return \"2\";\r\n                if(degrees>=126&&degrees<216) return \"6'\";\r\n                if(degrees>=216&&degrees<306) return \"2'\";\r\n                if(degrees>=306||degrees<36) return \"6\";\r\n            }\r\n            if(selectedSide===\"pink\"){\r\n                if(degrees>=36&&degrees<126) return \"3\";\r\n                if(degrees>=126&&degrees<216) return \"9'\";\r\n                if(degrees>=216&&degrees<306) return \"3'\";\r\n                if(degrees>=306||degrees<36) return \"9\";\r\n            }\r\n            if(selectedSide===\"yellow\"){\r\n                if(degrees>=36&&degrees<126) return \"4\";\r\n                if(degrees>=126&&degrees<216) return \"10'\";\r\n                if(degrees>=216&&degrees<306) return \"4'\";\r\n                if(degrees>=306||degrees<36) return \"10\";\r\n            }\r\n            if(selectedSide===\"red\"){\r\n                if(degrees>=36&&degrees<126) return \"5\";\r\n                if(degrees>=126&&degrees<216) return \"11'\";\r\n                if(degrees>=216&&degrees<306) return \"5'\";\r\n                if(degrees>=306||degrees<36) return \"11\";\r\n            }\r\n            if(selectedSide===\"green\"){\r\n                if(degrees>=36&&degrees<126) return \"6\";\r\n                if(degrees>=126&&degrees<216) return \"12'\";\r\n                if(degrees>=216&&degrees<306) return \"6'\";\r\n                if(degrees>=306||degrees<36) return \"12\";\r\n            }\r\n            if(selectedSide===\"lightpurple\"){\r\n                if(degrees>=36&&degrees<126) return \"2\";\r\n                if(degrees>=126&&degrees<216) return \"8'\";\r\n                if(degrees>=216&&degrees<306) return \"2'\";\r\n                if(degrees>=306||degrees<36) return \"8\";\r\n            }\r\n            if(selectedSide===\"lightblue\"){\r\n                if(degrees>=36&&degrees<126) return \"8\";\r\n                if(degrees>=126&&degrees<216) return \"9'\";\r\n                if(degrees>=216&&degrees<306) return \"8'\";\r\n                if(degrees>=306||degrees<36) return \"9\";\r\n            }\r\n            if(selectedSide===\"lightbrown\"){\r\n                if(degrees>=36&&degrees<126) return \"12\";\r\n                if(degrees>=126&&degrees<216) return \"6'\";\r\n                if(degrees>=216&&degrees<306) return \"12'\";\r\n                if(degrees>=306||degrees<36) return \"6\";\r\n            }\r\n            if(selectedSide===\"lightgreen\"){\r\n                if(degrees>=36&&degrees<126) return \"8\";\r\n                if(degrees>=126&&degrees<216) return \"2'\";\r\n                if(degrees>=216&&degrees<306) return \"8'\";\r\n                if(degrees>=306||degrees<36) return \"2\";\r\n            }\r\n            if(selectedSide===\"orange\"){\r\n                if(degrees>=36&&degrees<126) return \"9\";\r\n                if(degrees>=126&&degrees<216) return \"3'\";\r\n                if(degrees>=216&&degrees<306) return \"9'\";\r\n                if(degrees>=306||degrees<36) return \"3\";\r\n            }\r\n            if(selectedSide===\"purple\"){\r\n                if(degrees>=36&&degrees<126)return \"10\";\r\n                if(degrees>=126&&degrees<216) return \"4'\";\r\n                if(degrees>=216&&degrees<306) return \"10'\";\r\n                if(degrees>=306||degrees<36) return \"4\";\r\n            }\r\n            if(selectedSide===\"white\"){\r\n                if(degrees>=36&&degrees<126)return \"11\";\r\n                if(degrees>=126&&degrees<216) return \"5'\";\r\n                if(degrees>=216&&degrees<306) return \"11'\";\r\n                if(degrees>=306||degrees<36) return \"5\";\r\n            }\r\n        }\r\n    }\r\n    else if (selectedPiece===1){\r\n        let newStart = rotate_point(0,0,72*3,{...startPoint});\r\n        let newCurrent = rotate_point(0,0,72*3,{...newPoint});\r\n        let angle = Math.atan2((newCurrent[1]-newStart[1]),(newCurrent[0]-newStart[0]));\r\n        let degrees = rToD(angle);\r\n        let dist = Math.hypot(newCurrent[0]-newStart[0], newCurrent[1]-newStart[1]);\r\n        \r\n        if(degrees<0) degrees = 360+degrees;\r\n\r\n        if(touchedEdge||dist>.2){\r\n            if(selectedSide===\"blue\"){\r\n                if(degrees>=36&&degrees<126) return \"6\";\r\n                if(degrees>=126&&degrees<216) return \"5'\";\r\n                if(degrees>=216&&degrees<306) return \"6'\";\r\n                if(degrees>=306||degrees<36) return \"5\";\r\n            }\r\n            if(selectedSide===\"pink\"){\r\n                if(degrees>=36&&degrees<126) return \"9\";\r\n                if(degrees>=126&&degrees<216) return \"8'\";\r\n                if(degrees>=216&&degrees<306) return \"9'\";\r\n                if(degrees>=306||degrees<36) return \"8\";\r\n            }\r\n            if(selectedSide===\"yellow\"){\r\n                if(degrees>=36&&degrees<126) return \"10\";\r\n                if(degrees>=126&&degrees<216) return \"9'\";\r\n                if(degrees>=216&&degrees<306) return \"10'\";\r\n                if(degrees>=306||degrees<36) return \"9\";\r\n            }\r\n            if(selectedSide===\"red\"){\r\n                if(degrees>=36&&degrees<126) return \"11\";\r\n                if(degrees>=126&&degrees<216) return \"10'\";\r\n                if(degrees>=216&&degrees<306) return \"11'\";\r\n                if(degrees>=306||degrees<36) return \"10\";\r\n            }\r\n            if(selectedSide===\"green\"){\r\n                if(degrees>=36&&degrees<126) return \"12\";\r\n                if(degrees>=126&&degrees<216) return \"11'\";\r\n                if(degrees>=216&&degrees<306) return \"12'\";\r\n                if(degrees>=306||degrees<36) return \"11\";\r\n            }\r\n            if(selectedSide===\"lightpurple\"){\r\n                if(degrees>=36&&degrees<126) return \"8\";\r\n                if(degrees>=126&&degrees<216) return \"12'\";\r\n                if(degrees>=216&&degrees<306) return \"8'\";\r\n                if(degrees>=306||degrees<36) return \"12\";\r\n            }\r\n            if(selectedSide===\"lightblue\"){\r\n                if(degrees>=36&&degrees<126) return \"9\";\r\n                if(degrees>=126&&degrees<216) return \"10'\";\r\n                if(degrees>=216&&degrees<306) return \"9'\";\r\n                if(degrees>=306||degrees<36) return \"10\";\r\n            }\r\n            if(selectedSide===\"lightbrown\"){\r\n                if(degrees>=36&&degrees<126) return \"6\";\r\n                if(degrees>=126&&degrees<216) return \"2'\";\r\n                if(degrees>=216&&degrees<306) return \"6'\";\r\n                if(degrees>=306||degrees<36) return \"2\";\r\n            }\r\n            if(selectedSide===\"lightgreen\"){\r\n                if(degrees>=36&&degrees<126) return \"2\";\r\n                if(degrees>=126&&degrees<216) return \"3'\";\r\n                if(degrees>=216&&degrees<306) return \"2'\";\r\n                if(degrees>=306||degrees<36) return \"3\";\r\n            }\r\n            if(selectedSide===\"orange\"){\r\n                if(degrees>=36&&degrees<126) return \"3\";\r\n                if(degrees>=126&&degrees<216) return \"4'\";\r\n                if(degrees>=216&&degrees<306) return \"3'\";\r\n                if(degrees>=306||degrees<36) return \"4\";\r\n            }\r\n            if(selectedSide===\"purple\"){\r\n                if(degrees>=36&&degrees<126)return \"4\";\r\n                if(degrees>=126&&degrees<216) return \"5'\";\r\n                if(degrees>=216&&degrees<306) return \"4'\";\r\n                if(degrees>=306||degrees<36) return \"5\";\r\n            }\r\n            if(selectedSide===\"white\"){\r\n                if(degrees>=36&&degrees<126)return \"5\";\r\n                if(degrees>=126&&degrees<216) return \"6'\";\r\n                if(degrees>=216&&degrees<306) return \"5'\";\r\n                if(degrees>=306||degrees<36) return \"6\";\r\n            }\r\n        }\r\n    }\r\n    else if (selectedPiece===2){\r\n        let newStart = rotate_point(0,0,72*4,{...startPoint});\r\n        let newCurrent = rotate_point(0,0,72*4,{...newPoint});\r\n        let angle = Math.atan2((newCurrent[1]-newStart[1]),(newCurrent[0]-newStart[0]));\r\n        let degrees = rToD(angle);\r\n        let dist = Math.hypot(newCurrent[0]-newStart[0], newCurrent[1]-newStart[1]);\r\n        \r\n        if(degrees<0) degrees = 360+degrees;\r\n\r\n        if(touchedEdge||dist>.2){\r\n            if(selectedSide===\"blue\"){\r\n                if(degrees>=36&&degrees<126) return \"5\";\r\n                if(degrees>=126&&degrees<216) return \"4'\";\r\n                if(degrees>=216&&degrees<306) return \"5'\";\r\n                if(degrees>=306||degrees<36) return \"4\";\r\n            }\r\n            if(selectedSide===\"pink\"){\r\n                if(degrees>=36&&degrees<126) return \"8\";\r\n                if(degrees>=126&&degrees<216) return \"6'\";\r\n                if(degrees>=216&&degrees<306) return \"8'\";\r\n                if(degrees>=306||degrees<36) return \"6\";\r\n            }\r\n            if(selectedSide===\"yellow\"){\r\n                if(degrees>=36&&degrees<126) return \"9\";\r\n                if(degrees>=126&&degrees<216) return \"2'\";\r\n                if(degrees>=216&&degrees<306) return \"9'\";\r\n                if(degrees>=306||degrees<36) return \"2\";\r\n            }\r\n            if(selectedSide===\"red\"){\r\n                if(degrees>=36&&degrees<126) return \"10\";\r\n                if(degrees>=126&&degrees<216) return \"3'\";\r\n                if(degrees>=216&&degrees<306) return \"10'\";\r\n                if(degrees>=306||degrees<36) return \"3\";\r\n            }\r\n            if(selectedSide===\"green\"){\r\n                if(degrees>=36&&degrees<126) return \"11\";\r\n                if(degrees>=126&&degrees<216) return \"4'\";\r\n                if(degrees>=216&&degrees<306) return \"11'\";\r\n                if(degrees>=306||degrees<36) return \"4\";\r\n            }\r\n            if(selectedSide===\"lightpurple\"){\r\n                if(degrees>=36&&degrees<126) return \"12\";\r\n                if(degrees>=126&&degrees<216) return \"5'\";\r\n                if(degrees>=216&&degrees<306) return \"12'\";\r\n                if(degrees>=306||degrees<36) return \"5\";\r\n            }\r\n            if(selectedSide===\"lightblue\"){\r\n                if(degrees>=36&&degrees<126) return \"10\";\r\n                if(degrees>=126&&degrees<216) return \"11'\";\r\n                if(degrees>=216&&degrees<306) return \"10'\";\r\n                if(degrees>=306||degrees<36) return \"11\";\r\n            }\r\n            if(selectedSide===\"lightbrown\"){\r\n                if(degrees>=36&&degrees<126) return \"2\";\r\n                if(degrees>=126&&degrees<216) return \"9'\";\r\n                if(degrees>=216&&degrees<306) return \"2'\";\r\n                if(degrees>=306||degrees<36) return \"9\";\r\n            }\r\n            if(selectedSide===\"lightgreen\"){\r\n                if(degrees>=36&&degrees<126) return \"3\";\r\n                if(degrees>=126&&degrees<216) return \"10'\";\r\n                if(degrees>=216&&degrees<306) return \"3'\";\r\n                if(degrees>=306||degrees<36) return \"10\";\r\n            }\r\n            if(selectedSide===\"orange\"){\r\n                if(degrees>=36&&degrees<126) return \"4\";\r\n                if(degrees>=126&&degrees<216) return \"11'\";\r\n                if(degrees>=216&&degrees<306) return \"4'\";\r\n                if(degrees>=306||degrees<36) return \"11\";\r\n            }\r\n            if(selectedSide===\"purple\"){\r\n                if(degrees>=36&&degrees<126)return \"5\";\r\n                if(degrees>=126&&degrees<216) return \"12'\";\r\n                if(degrees>=216&&degrees<306) return \"5'\";\r\n                if(degrees>=306||degrees<36) return \"12\";\r\n            }\r\n            if(selectedSide===\"white\"){\r\n                if(degrees>=36&&degrees<126)return \"6\";\r\n                if(degrees>=126&&degrees<216) return \"8'\";\r\n                if(degrees>=216&&degrees<306) return \"6'\";\r\n                if(degrees>=306||degrees<36) return \"8\";\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default calculateTurn;","import \"./MenuButton.css\";\r\n\r\nconst MenuButton = props => {\r\n    const className = props.children?\"menu-button\":\" menu-button hidden\";\r\n    return(\r\n        <div className=\"menu-button-container\">\r\n            <div className={className} onClick={props.onClick}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MenuButton;","// Generates 25 random moves\r\n// Rules:\r\n// 1. No more than 3 of the same move in a row\r\n// 2. No move immediately inversed (more advanced checking later)\r\nconst scramble = () => {\r\n    let moves = [];\r\n\r\n    while(moves.length<25){\r\n        const lastIndex = moves.length-1;\r\n        const secondToLastIndex = moves.length-2;\r\n\r\n        let randomFace = Math.floor(Math.random() * 12)+1;\r\n        let randomDir  = Math.floor(Math.random() * 2);\r\n\r\n        let move = `${randomFace}${randomDir?\"\":\"'\"}`;\r\n        let inverse = `${randomFace}${randomDir?\"'\":\"\"}`;\r\n\r\n        if(inverse===moves[lastIndex]){\r\n            // No move added\r\n        }\r\n        else if(moves.length>2){\r\n            if (move===moves[lastIndex]&&\r\n                move===moves[secondToLastIndex]){\r\n                    // No move added\r\n            }\r\n            else {\r\n                moves.push(move)\r\n            }\r\n        }\r\n        else {\r\n            moves.push(move)\r\n        }\r\n    }\r\n    return moves;\r\n}\r\n\r\nexport default scramble;","import 'rc-slider/assets/index.css';\r\nimport './SpeedSlider.css';\r\nimport React, { useState } from 'react';\r\nimport Slider from 'rc-slider'\r\n\r\nconst style = { width: \"20%\", position: \"fixed\", top: \"85px\", left: \"10px\",fontSize:\"1rem\"};\r\n\r\nlet speedToValue = speed => {\r\n    switch(speed){\r\n        case .25:\r\n            return 0;\r\n        case .5:\r\n            return 1;\r\n        case 1:\r\n            return 2;\r\n        case 3:\r\n            return 3;\r\n        case 6:\r\n            return 4;\r\n        case 12:\r\n            return 5;\r\n        case 24:\r\n            return 6;\r\n        case 72:\r\n            return 7;\r\n        default:\r\n    }\r\n}\r\n\r\nconst SpeedSlider = ({speed,setSpeed}) => {\r\n    const [current,setCurrent] = useState(speedToValue(speed()))\r\n    return (<div className=\"slider-div\" style = {style}>\r\n        <Slider \r\n            defaultValue={current} \r\n            value={current}\r\n            min={0} max={7} \r\n            step={1}\r\n            onChange={newSpeed=> {\r\n                setSpeed(newSpeed);\r\n                setCurrent(newSpeed);\r\n            }}\r\n        />\r\n        <div className=\"speed-label\">\r\n            Speed\r\n        </div>\r\n    </div>)\r\n}\r\n;\r\n\r\nexport default SpeedSlider;","import \"./UndoRedo.css\";\r\n\r\nconst UndoRedo = ({setIndex})=> {\r\n    return (\r\n        <div className=\"undo-redo-container\">\r\n            <div className=\"undo-redo-button\" onClick={()=>setIndex(-1)}>\r\n                Undo\r\n            </div>\r\n            <div className=\"undo-redo-button\" onClick={()=>setIndex(1)}>\r\n                Redo\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UndoRedo;","import \"./Main.css\";\r\nimport MenuButton from \"../MenuButton/MenuButton\";\r\nimport scramble from \"./scramble\";\r\nimport SpeedSlider from \"../SpeedSlider/SpeedSlider\";\r\nimport UndoRedo from \"../UndoRedo/UndoRedo\";\r\nimport { useState } from \"react\";\r\nconst Main = ({setMoveLogIndex,setMoveQueue,reset,setMenuId,setCurrentFunction,currentFunction,speed,setSpeed}) => {\r\n\r\n    let [sliderSpeed,setSliderSpeed] = useState(5);\r\n\r\n    return (\r\n\r\n        <div className=\"main-menu\">\r\n\r\n            <SpeedSlider \r\n                speed={speed}\r\n                sliderSpeed={sliderSpeed}\r\n                setSpeed={setSpeed} \r\n                setSliderSpeed={setSliderSpeed}\r\n            />\r\n\r\n            <UndoRedo setIndex={setMoveLogIndex}/>\r\n\r\n            <div className=\"panel panel-left\">\r\n\r\n                <MenuButton setCurrentFunction={setCurrentFunction} onClick={()=>{\r\n                    if(currentFunction()!==\"none\") return;\r\n                    setMenuId(1);\r\n                    setCurrentFunction(\"colorpicker\")\r\n                }}>Color Picker</MenuButton>\r\n\r\n                <MenuButton onClick={()=>{\r\n                    if(currentFunction()!==\"none\") return;\r\n                    setMenuId(2);\r\n                    setCurrentFunction(\"solver\")\r\n                }}>Solver</MenuButton>\r\n\r\n                <MenuButton onClick={()=>setMenuId(0/*3*/)}>Patterns</MenuButton>\r\n\r\n            </div>\r\n\r\n            <div className=\"panel-divider\"></div>\r\n\r\n            <div className=\"panel panel-right\">\r\n\r\n                <MenuButton></MenuButton>\r\n\r\n                <MenuButton onClick={()=>{\r\n                    setMoveQueue(scramble());\r\n                    setCurrentFunction(\"scramble\");\r\n                }}>Scramble</MenuButton>\r\n\r\n                <MenuButton onClick={()=>reset(Date.now())}>Reset</MenuButton>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Main;","import { useState } from \"react\";\r\nimport \"./ColorPicker.css\";\r\n\r\nconst ColorPicker = ({setMenuId,setCurrentFunction,setColor,getColor,resetMegaMinx}) => {\r\n    // array of face colors in the order they're generated\r\n    const [selected,setSelected] = useState(0);\r\n\r\n    let faceColors = [\r\n        \"blue\",     // 1\r\n        \"pink\",     // 2\r\n        \"yellow\",   // 3\r\n        \"red\",      // 4\r\n        \"green\",    // 5\r\n        \"light purple\",  // 6 light purple\r\n\r\n        \"light blue\",  // 7 light blue\r\n        \"light brown\",  // 8 light brown\r\n        \"light green\",  // 9 light green\r\n        \"orange\",   // 10\r\n        \"purple\",   // 11\r\n        \"white\"     // 12\r\n    ];\r\n\r\n    let faceColorsValues = [\r\n        \"blue\",     // 1\r\n        \"#ff80ce\",     // 2 pink\r\n        \"yellow\",   // 3\r\n        \"red\",      // 4\r\n        \"green\",    // 5\r\n        \"#c585f7\",  // 6 light purple\r\n\r\n        \"#4fc3f7\",  // 7 light blue\r\n        \"#C39B77\",  // 8 light brown\r\n        \"#64dd17\",  // 9 light green\r\n        \"orange\",   // 10\r\n        \"purple\",   // 11\r\n        \"white\"     // 12\r\n    ]\r\n\r\n    return (\r\n        <div className=\"color-menu-container\">\r\n            <div className=\"color-menu\">\r\n                {faceColors.map((color,i)=>\r\n                    <div \r\n                        className={`color-button ${color.replace(' ','-')}`} \r\n                        key={color} \r\n                        onClick={\r\n                            ()=>{\r\n                                setSelected(i);\r\n                                setColor(faceColorsValues[i]);\r\n                            }\r\n                        }\r\n                    >\r\n                        <div className=\"holder-text\">Color buttons</div>\r\n                        {i===selected?\r\n                            <div className=\"blackdot\"></div>:<></>\r\n                        }\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"color-options\">\r\n                <div className=\"option-button color-exit\" onClick=\r\n                    {()=>{\r\n                        setMenuId(0);\r\n                        setColor('blue');\r\n                        setCurrentFunction('none');\r\n                        resetMegaMinx();\r\n                    }}\r\n                >\r\n                    <strong>Exit</strong>\r\n                </div>\r\n                <div className=\"option-button color-check\">\r\n                    <strong>Check</strong>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default ColorPicker;","\r\n\r\nlet blueStar = (piece,index) => {\r\n    console.log(\"------------------------------\")\r\n    let moves = [];\r\n    let values = Object.values(piece);\r\n    let keys = Object.keys(piece);\r\n    console.log(piece,index)\r\n\r\n    let colorNames = [\r\n        \"blue\",     // 1\r\n        \"pink\",     // 2 pink\r\n        \"yellow\",   // 3\r\n        \"red\",      // 4\r\n        \"green\",    // 5\r\n        \"lightpurple\",  // 6 light purple\r\n        \"lightblue\",  // 7 light blue\r\n        \"lightbrown\",  // 8 light brown\r\n        \"lightgreen\",  // 9 light green\r\n        \"orange\",   // 10\r\n        \"purple\",   // 11\r\n        \"white\"     // 12\r\n    ]\r\n\r\n    if(values.includes(\"blue\")&&values.includes(\"green\")){\r\n\r\n        console.log(\"solver for blue green here\")\r\n        \r\n        if(index<5){\r\n            let sideToTurn = colorNames.indexOf(keys.filter(side=>side!==\"blue\")[0])+1;\r\n            if(piece.blue===\"blue\") moves.push(\"1\");\r\n            else {\r\n                if(keys.includes(\"lightpurple\")){\r\n                    moves.push(`${sideToTurn}'`)\r\n                }\r\n                else {\r\n                    moves.push(`${sideToTurn}`)\r\n                }\r\n            }\r\n        }\r\n\r\n        else if(index<10){ \r\n\r\n            let sideToTurn = colorNames.indexOf(keys.filter((key,i)=>values[i]!==\"blue\")[0])+1;\r\n            if(index===5){\r\n                if(sideToTurn===5) moves.push(`${sideToTurn}'`);\r\n                else moves.push(`${sideToTurn}`);\r\n            }\r\n            if(index===6){\r\n                if(sideToTurn===4) moves.push(`${sideToTurn}'`);\r\n                else moves.push(`${sideToTurn}`);\r\n            }\r\n            if(index===7){\r\n                if(sideToTurn===3) moves.push(`${sideToTurn}'`);\r\n                else moves.push(`${sideToTurn}`);\r\n            }\r\n            if(index===8){\r\n                if(sideToTurn===2) moves.push(`${sideToTurn}'`);\r\n                else moves.push(`${sideToTurn}`);\r\n            }\r\n            if(index===9){\r\n                if(sideToTurn===6) moves.push(`${sideToTurn}'`);\r\n                else moves.push(`${sideToTurn}`);\r\n            }\r\n\r\n        }\r\n\r\n        else if(index<20){\r\n            let sideToTurn = colorNames.indexOf(keys.filter(key=>colorNames.indexOf(key)<6)[0])+1;\r\n            let direction = index%2?\"\":\"'\";\r\n            moves.push(sideToTurn+direction);\r\n        }\r\n\r\n        else if(index<25){\r\n            let indexKeys = keys.map(key=>colorNames.indexOf(key)+1);\r\n            let sideToTurn = Math.max(...indexKeys);\r\n\r\n            if(indexKeys.includes(8)&&indexKeys.includes(12)){\r\n                sideToTurn = 8;\r\n\r\n            }\r\n            moves.push(`${sideToTurn}`);\r\n        }\r\n\r\n        else if(index<30){\r\n            let indexKeys = keys.map(key=>colorNames.indexOf(key)+1);\r\n            let sideToTurn = indexKeys.filter(key=>key!==7)[0];\r\n            moves.push(`${sideToTurn}`);\r\n        }\r\n    }\r\n    else if(values.includes(\"blue\")&&values.includes(\"red\")){\r\n        if(index<5){\r\n            let indexOfBlue = keys.indexOf('blue');\r\n\r\n            // Blue sticker is on blue side\r\n            if(keys[indexOfBlue]===values[indexOfBlue]){\r\n                if(index===2){\r\n                    let set = [\"5\",\"1'\",\"5'\"];\r\n                    moves.push(...set);\r\n                }\r\n                else if(index===3){\r\n                    let set = [\"5\",\"1'\",\"1'\",\"5'\"];\r\n                    moves.push(...set);\r\n                }\r\n                else if(index===4){\r\n                    let set = [\"5\",\"1\",\"1\",\"5'\"];\r\n                    moves.push(...set);\r\n                }\r\n            }\r\n            else {\r\n                if(index===1){\r\n                    let set = [\"4\",\"1'\",\"5\",\"1\"];\r\n                    moves.push(...set);\r\n                }\r\n                else if(index===2){\r\n                    let set = [\"3\",\"4\"];\r\n                    moves.push(...set);\r\n                }\r\n                else if(index===3){\r\n                    let set = [\"2\",\"1\",\"3\",\"1'\"];\r\n                    moves.push(...set);\r\n                }\r\n                else if(index===4){\r\n                    let set = [\"6'\",\"1'\",\"5'\",\"1\"];\r\n                    moves.push(...set);\r\n                }\r\n            }\r\n            console.log(keys,values)\r\n        }\r\n        else if(index<10){\r\n            let indexOfBlue = values.indexOf(\"blue\");\r\n            let face = keys.filter((key,i)=>i!==indexOfBlue)[0];\r\n            let faceToTurn = colorNames.indexOf(face)+1;\r\n            console.log(faceToTurn)\r\n            if(index===5){\r\n                if(faceToTurn===5){\r\n                    let set = [\"1'\",\"5'\",\"1\"];\r\n                    moves.push(...set);\r\n                }\r\n                else {\r\n                    let set = [\"1'\",\"1'\",\"6\",\"1\",\"1\"];\r\n                    moves.push(...set);\r\n                }\r\n            }\r\n            else if(index===6){\r\n                console.log(faceToTurn); \r\n                if(faceToTurn===4){\r\n                    let set = [`${faceToTurn}'`];\r\n                    moves.push(...set);\r\n                }\r\n                else{\r\n                    let set = [\"1'\",`${faceToTurn}`,\"1\"];\r\n                    moves.push(...set);\r\n                }\r\n            }\r\n            else if(index===7){\r\n                if(faceToTurn===3){\r\n                    let set = [\"1\",`${faceToTurn}'`,\"1'\"];\r\n                    moves.push(...set);\r\n                } else {\r\n                    let set = [`${faceToTurn}`];\r\n                    moves.push(...set);\r\n                }\r\n            }\r\n            else if(index===8){\r\n                if(faceToTurn===2){\r\n                    let set = [\"1\",\"1\",`${faceToTurn}'`,\"1'\",\"1'\"];\r\n                    moves.push(...set);\r\n                } else {\r\n                    let set = [\"1\",`${faceToTurn}`,\"1'\"];  \r\n                    moves.push(...set);\r\n                }\r\n            }\r\n            else if(index===9){\r\n                if(faceToTurn===6){\r\n                    let set = [\"1\",\"1\",\"1\",`${faceToTurn}'`,\"1'\",\"1'\",\"1'\"];\r\n                    moves.push(...set);\r\n                } else {\r\n                    let set = [\"1\",\"1\",`${faceToTurn}`,\"1'\",\"1'\"];  \r\n                    moves.push(...set);\r\n                }\r\n            }\r\n        }\r\n        else if(index<20){\r\n            \r\n            let topSide = colorNames.indexOf(keys.filter(key=>colorNames.indexOf(key)>5)[0])+1;\r\n            let bottomSide = colorNames.indexOf(keys.filter(key=>colorNames.indexOf(key)<6)[0])+1;\r\n\r\n            if(index%2){\r\n                console.log(\"checking middle layer\",topSide,bottomSide)\r\n                let rightOfBottomSide = bottomSide>2?bottomSide-1:6;\r\n                let set = [`${rightOfBottomSide}`,`${topSide}'`,`${rightOfBottomSide}'`];\r\n                console.log(set)\r\n                moves.push(...set);\r\n            }\r\n            else {\r\n                let leftOfBottomSide = bottomSide<6?bottomSide+1:2;\r\n                let set = [`${leftOfBottomSide}'`,`${topSide}`,`${leftOfBottomSide}`];\r\n                moves.push(...set);\r\n            }\r\n        }\r\n        else if(index<25){\r\n            let sideToTurn = Math.max(...keys.map(key=>colorNames.indexOf(key)))+1;\r\n            if(sideToTurn===12&&keys.includes(\"lightbrown\")) sideToTurn=8;\r\n            console.log(sideToTurn);\r\n            let set = [`${sideToTurn}`];\r\n            moves.push(...set);\r\n        }\r\n        else {\r\n            let sideToTurn = colorNames.indexOf(keys.filter(key=>key!==\"lightblue\")[0])+1;\r\n            let set = [`${sideToTurn}`];\r\n            moves.push(...set);\r\n        }\r\n    }\r\n    else if(values.includes(\"blue\")&&values.includes(\"yellow\")){\r\n        if(index<5){\r\n            if(index===2){\r\n                let set=[\"3'\",\"1\",\"2'\",\"1'\"];\r\n                moves.push(...set);\r\n            }\r\n        }\r\n        else if(index<10){\r\n\r\n        }\r\n        else if(index<20){\r\n            \r\n            let topSide = colorNames.indexOf(keys.filter(key=>colorNames.indexOf(key)>5)[0])+1;\r\n            let bottomSide = colorNames.indexOf(keys.filter(key=>colorNames.indexOf(key)<6)[0])+1;\r\n\r\n            if(index%2){\r\n                console.log(\"checking middle layer\",topSide,bottomSide)\r\n                let rightOfBottomSide = bottomSide>2?bottomSide-1:6;\r\n                let set = [`${rightOfBottomSide}`,`${topSide}'`,`${rightOfBottomSide}'`];\r\n                console.log(set)\r\n                moves.push(...set);\r\n            }\r\n            else {\r\n                let leftOfBottomSide = bottomSide<6?bottomSide+1:2;\r\n                let set = [`${leftOfBottomSide}'`,`${topSide}`,`${leftOfBottomSide}`];\r\n                moves.push(...set);\r\n            }\r\n        }\r\n        else if(index<25){\r\n            let sideToTurn = Math.max(...keys.map(key=>colorNames.indexOf(key)))+1;\r\n            if(sideToTurn===12&&keys.includes(\"lightbrown\")) sideToTurn=8;\r\n            console.log(sideToTurn);\r\n            let set = [`${sideToTurn}`];\r\n            moves.push(...set);\r\n        }\r\n        else {\r\n            let sideToTurn = colorNames.indexOf(keys.filter(key=>key!==\"lightblue\")[0])+1;\r\n            let set = [`${sideToTurn}`];\r\n            moves.push(...set);\r\n        }\r\n    }\r\n    else if(values.includes(\"blue\")&&values.includes(\"pink\")){\r\n        if(index<5){\r\n\r\n        }\r\n        else if(index<10){\r\n            \r\n        }\r\n        else if(index<20){\r\n            \r\n            let topSide = colorNames.indexOf(keys.filter(key=>colorNames.indexOf(key)>5)[0])+1;\r\n            let bottomSide = colorNames.indexOf(keys.filter(key=>colorNames.indexOf(key)<6)[0])+1;\r\n\r\n            if(index%2){\r\n                console.log(\"checking middle layer\",topSide,bottomSide)\r\n                let rightOfBottomSide = bottomSide>2?bottomSide-1:6;\r\n                let set = [`${rightOfBottomSide}`,`${topSide}'`,`${rightOfBottomSide}'`];\r\n                console.log(set)\r\n                moves.push(...set);\r\n            }\r\n            else {\r\n                let leftOfBottomSide = bottomSide<6?bottomSide+1:2;\r\n                let set = [`${leftOfBottomSide}'`,`${topSide}`,`${leftOfBottomSide}`];\r\n                moves.push(...set);\r\n            }\r\n        }\r\n        else if(index<25){\r\n            let sideToTurn = Math.max(...keys.map(key=>colorNames.indexOf(key)))+1;\r\n            if(sideToTurn===12&&keys.includes(\"lightbrown\")) sideToTurn=8;\r\n            console.log(sideToTurn);\r\n            let set = [`${sideToTurn}`];\r\n            moves.push(...set);\r\n        }\r\n        else {\r\n            let sideToTurn = colorNames.indexOf(keys.filter(key=>key!==\"lightblue\")[0])+1;\r\n            let set = [`${sideToTurn}`];\r\n            moves.push(...set);\r\n        }\r\n    }\r\n    else if(values.includes(\"blue\")&&values.includes(\"lightpurple\")){\r\n        if(index<5){\r\n\r\n        }\r\n        else if(index<10){\r\n            \r\n        }\r\n        else if(index<20){\r\n            \r\n            let topSide = colorNames.indexOf(keys.filter(key=>colorNames.indexOf(key)>5)[0])+1;\r\n            let bottomSide = colorNames.indexOf(keys.filter(key=>colorNames.indexOf(key)<6)[0])+1;\r\n\r\n            if(index%2){\r\n                console.log(\"checking middle layer\",topSide,bottomSide)\r\n                let rightOfBottomSide = bottomSide>2?bottomSide-1:6;\r\n                let set = [`${rightOfBottomSide}`,`${topSide}'`,`${rightOfBottomSide}'`];\r\n                console.log(set)\r\n                moves.push(...set);\r\n            }\r\n            else {\r\n                let leftOfBottomSide = bottomSide<6?bottomSide+1:2;\r\n                let set = [`${leftOfBottomSide}'`,`${topSide}`,`${leftOfBottomSide}`];\r\n                moves.push(...set);\r\n            }\r\n        }\r\n        else if(index<25){\r\n            let sideToTurn = Math.max(...keys.map(key=>colorNames.indexOf(key)))+1;\r\n            if(sideToTurn===12&&keys.includes(\"lightbrown\")) sideToTurn=8;\r\n            console.log(sideToTurn);\r\n            let set = [`${sideToTurn}`];\r\n            moves.push(...set);\r\n        }\r\n        else {\r\n            let sideToTurn = colorNames.indexOf(keys.filter(key=>key!==\"lightblue\")[0])+1;\r\n            let set = [`${sideToTurn}`];\r\n            moves.push(...set);\r\n        }\r\n    }\r\n\r\n    console.log(moves)\r\n    return moves;\r\n}\r\n\r\nexport default blueStar;","const pieces = (decaObject,type) => {\r\n\r\n    const pieces = {\r\n        corners : [],\r\n        edges : []\r\n    }\r\n\r\n    let colorFace = {\r\n        blue: \"face1\",\r\n        pink: \"face2\",\r\n        yellow: \"face3\",\r\n        red: \"face4\",\r\n        green: \"face5\",\r\n        lightpurple: \"face6\",\r\n        lightblue: \"face7\",\r\n        lightbrown: \"face8\",\r\n        lightgreen: \"face9\",\r\n        orange: \"face10\",\r\n        purple: \"face11\",\r\n        white: \"face12\",\r\n    }\r\n\r\n    let hexToColorName = {\r\n        \"0000ff\":\"blue\",\r\n        \"ff80ce\":\"pink\",\r\n        \"ffff00\":\"yellow\",\r\n        \"ff0000\":\"red\",\r\n        \"008000\":\"green\",\r\n        \"c585f7\":\"lightpurple\",\r\n        \"4fc3f7\":\"lightblue\",\r\n        \"c39b77\":\"lightbrown\",\r\n        \"64dd17\":\"lightgreen\",\r\n        \"ffa500\":\"orange\",\r\n        \"800080\":\"purple\",\r\n        \"ffffff\":\"white\",\r\n    }\r\n\r\n    let getColor = (color,piece) => \r\n        hexToColorName[decaObject[colorFace[color]]\r\n            .front[piece]\r\n            .material\r\n            .color\r\n            .getHexString()];\r\n\r\n    // ###############################################\r\n    // Corner piece 1 of 20\r\n    pieces.corners.push({\r\n        blue: getColor(\"blue\",3),\r\n        lightpurple: getColor(\"lightpurple\",7),\r\n        green: getColor(\"green\",9)\r\n    });\r\n\r\n    // Corner piece 2 of 20\r\n    pieces.corners.push({\r\n        blue: getColor(\"blue\",5),\r\n        green: getColor(\"green\",7),\r\n        red: getColor(\"red\",9)\r\n    });\r\n\r\n    // Corner piece 3 of 20\r\n    pieces.corners.push({\r\n        blue: getColor(\"blue\",7),\r\n        red: getColor(\"red\",7),\r\n        yellow : getColor(\"yellow\",9)\r\n    });\r\n\r\n    // Corner piece 4 of 20\r\n    pieces.corners.push({\r\n        blue: getColor(\"blue\",9),\r\n        yellow: getColor(\"yellow\",7),\r\n        pink : getColor(\"pink\",9)\r\n    });\r\n\r\n    // Corner piece 5 of 20\r\n    pieces.corners.push({\r\n        blue: getColor(\"blue\",11),\r\n        pink: getColor(\"pink\",7),\r\n        lightpurple : getColor(\"lightpurple\",9)\r\n    });\r\n\r\n    // Corner piece 6 of 20\r\n    pieces.corners.push({\r\n        white: getColor(\"white\",3),\r\n        green: getColor(\"green\",11),\r\n        lightpurple : getColor(\"lightpurple\",5)\r\n    });\r\n\r\n    // Corner piece 7 of 20\r\n    pieces.corners.push({\r\n        purple: getColor(\"purple\",3),\r\n        red: getColor(\"red\",11),\r\n        green : getColor(\"green\",5)\r\n    });\r\n\r\n    // Corner piece 8 of 20\r\n    pieces.corners.push({\r\n        orange: getColor(\"orange\",3),\r\n        yellow: getColor(\"yellow\",11),\r\n        red : getColor(\"red\",5)\r\n    });\r\n\r\n    // Corner piece 9 of 20\r\n    pieces.corners.push({\r\n        lightgreen: getColor(\"lightgreen\",3),\r\n        pink: getColor(\"pink\",11),\r\n        yellow : getColor(\"yellow\",5)\r\n    });\r\n\r\n    // Corner piece 10 of 20\r\n    pieces.corners.push({\r\n        lightbrown: getColor(\"lightbrown\",3),\r\n        lightpurple: getColor(\"lightpurple\",11),\r\n        pink : getColor(\"pink\",5)\r\n    });\r\n\r\n    // Corner piece 11 of 20\r\n    pieces.corners.push({\r\n        green: getColor(\"green\",3),\r\n        white: getColor(\"white\",11),\r\n        purple : getColor(\"purple\",5)\r\n    });\r\n\r\n    // Corner piece 12 of 20\r\n    pieces.corners.push({\r\n        red: getColor(\"red\",3),\r\n        purple: getColor(\"purple\",11),\r\n        orange : getColor(\"orange\",5)\r\n    });\r\n\r\n    // Corner piece 13 of 20\r\n    pieces.corners.push({\r\n        yellow: getColor(\"yellow\",3),\r\n        orange: getColor(\"orange\",11),\r\n        lightgreen : getColor(\"lightgreen\",5)\r\n    });\r\n\r\n    // Corner piece 14 of 20\r\n    pieces.corners.push({\r\n        pink: getColor(\"pink\",3),\r\n        lightgreen: getColor(\"lightgreen\",11),\r\n        lightbrown : getColor(\"lightbrown\",5)\r\n    });\r\n\r\n    // Corner piece 15 of 20\r\n    pieces.corners.push({\r\n        lightpurple: getColor(\"lightpurple\",3),\r\n        lightbrown: getColor(\"lightbrown\",11),\r\n        white : getColor(\"white\",5)\r\n    });\r\n\r\n    // Corner piece 16 of 20\r\n    pieces.corners.push({\r\n        lightblue: getColor(\"lightblue\",7),\r\n        purple: getColor(\"purple\",7),\r\n        white : getColor(\"white\",9)\r\n    });\r\n\r\n    // Corner piece 17 of 20\r\n    pieces.corners.push({\r\n        lightblue: getColor(\"lightblue\",5),\r\n        orange: getColor(\"orange\",7),\r\n        purple : getColor(\"purple\",9)\r\n    });\r\n\r\n    // Corner piece 18 of 20\r\n    pieces.corners.push({\r\n        lightblue: getColor(\"lightblue\",3),\r\n        lightgreen: getColor(\"lightgreen\",7),\r\n        orange : getColor(\"orange\",9)\r\n    });\r\n\r\n    // Corner piece 19 of 20\r\n    pieces.corners.push({\r\n        lightblue: getColor(\"lightblue\",11),\r\n        lightbrown: getColor(\"lightbrown\",7),\r\n        lightgreen : getColor(\"lightgreen\",9)\r\n    });\r\n\r\n    // Corner piece 20 of 20\r\n    pieces.corners.push({\r\n        lightblue: getColor(\"lightblue\",9),\r\n        white: getColor(\"white\",7),\r\n        lightbrown : getColor(\"lightbrown\",9)\r\n    });\r\n\r\n    // ###############################################\r\n    // Edge piece 1 of 30\r\n    pieces.edges.push({\r\n        blue : getColor(\"blue\",13),\r\n        green : getColor(\"green\",17)\r\n    });\r\n    // Edge piece 2 of 30\r\n    pieces.edges.push({\r\n        blue : getColor(\"blue\",15),\r\n        red : getColor(\"red\",17)\r\n    });\r\n    // Edge piece 3 of 30\r\n    pieces.edges.push({\r\n        blue : getColor(\"blue\",17),\r\n        yellow : getColor(\"yellow\",17)\r\n    });\r\n    // Edge piece 4 of 30\r\n    pieces.edges.push({\r\n        blue : getColor(\"blue\",19),\r\n        pink : getColor(\"pink\",17)\r\n    });\r\n    // Edge piece 5 of 30\r\n    pieces.edges.push({\r\n        blue : getColor(\"blue\",21),\r\n        lightpurple : getColor(\"lightpurple\",17)\r\n    });\r\n    // -----------------------------------------------\r\n    // Edge piece 6 of 30\r\n    pieces.edges.push({\r\n        lightpurple : getColor(\"lightpurple\",15),\r\n        green : getColor(\"green\",19)\r\n    });\r\n    // Edge piece 7 of 30\r\n    pieces.edges.push({\r\n        green : getColor(\"green\",15),\r\n        red : getColor(\"red\",19)\r\n    });\r\n    // Edge piece 8 of 30\r\n    pieces.edges.push({\r\n        red : getColor(\"red\",15),\r\n        yellow : getColor(\"yellow\",19)\r\n    });\r\n    // Edge piece 9 of 30\r\n    pieces.edges.push({\r\n        yellow : getColor(\"yellow\",15),\r\n        pink : getColor(\"pink\",19)\r\n    });\r\n    // Edge piece 10 of 30\r\n    pieces.edges.push({\r\n        pink : getColor(\"pink\",15),\r\n        lightpurple : getColor(\"lightpurple\",19)\r\n    });\r\n    // -----------------------------------------------\r\n    // Edge piece 11 of 30\r\n    pieces.edges.push({\r\n        green : getColor(\"green\",21),\r\n        white : getColor(\"white\",21)\r\n    });\r\n    // Edge piece 12 of 30\r\n    pieces.edges.push({\r\n        green : getColor(\"green\",13),\r\n        purple : getColor(\"purple\",13)\r\n    });\r\n    // Edge piece 13 of 30\r\n    pieces.edges.push({\r\n        red : getColor(\"red\",21),\r\n        purple : getColor(\"purple\",21)\r\n    });\r\n    // Edge piece 14 of 30\r\n    pieces.edges.push({\r\n        red : getColor(\"red\",13),\r\n        orange : getColor(\"orange\",13)\r\n    });\r\n    // Edge piece 15 of 30\r\n    pieces.edges.push({\r\n        yellow : getColor(\"yellow\",21),\r\n        orange : getColor(\"orange\",21)\r\n    });\r\n    // Edge piece 16 of 30\r\n    pieces.edges.push({\r\n        yellow : getColor(\"yellow\",13),\r\n        lightgreen : getColor(\"lightgreen\",13)\r\n    });\r\n    // Edge piece 17 of 30\r\n    pieces.edges.push({\r\n        pink : getColor(\"pink\",21),\r\n        lightgreen : getColor(\"lightgreen\",21)\r\n    });\r\n    // Edge piece 18 of 30\r\n    pieces.edges.push({\r\n        pink : getColor(\"pink\",13),\r\n        lightbrown : getColor(\"lightbrown\",13)\r\n    });\r\n    // Edge piece 19 of 30\r\n    pieces.edges.push({\r\n        lightpurple : getColor(\"lightpurple\",21),\r\n        lightbrown : getColor(\"lightbrown\",21)\r\n    });\r\n    // Edge piece 20 of 30\r\n    pieces.edges.push({\r\n        lightpurple : getColor(\"lightpurple\",13),\r\n        white : getColor(\"white\",13)\r\n    });\r\n    // -----------------------------------------------\r\n    // Edge piece 21 of 30\r\n    pieces.edges.push({\r\n        white : getColor(\"white\",19),\r\n        purple : getColor(\"purple\",15)\r\n    });\r\n    // Edge piece 22 of 30\r\n    pieces.edges.push({\r\n        purple : getColor(\"purple\",19),\r\n        orange : getColor(\"orange\",15)\r\n    });\r\n    // Edge piece 23 of 30\r\n    pieces.edges.push({\r\n        orange : getColor(\"orange\",19),\r\n        lightgreen : getColor(\"lightgreen\",15)\r\n    });\r\n    // Edge piece 24 of 30\r\n    pieces.edges.push({\r\n        lightgreen : getColor(\"lightgreen\",19),\r\n        lightbrown : getColor(\"lightbrown\",15)\r\n    });\r\n    // Edge piece 25 of 30\r\n    pieces.edges.push({\r\n        lightbrown : getColor(\"lightbrown\",19),\r\n        white : getColor(\"white\",15)\r\n    });\r\n    // -----------------------------------------------\r\n    // Edge piece 26 of 30\r\n    pieces.edges.push({\r\n        lightblue : getColor(\"lightblue\",17),\r\n        white : getColor(\"white\",17)\r\n    });\r\n    // Edge piece 27 of 30\r\n    pieces.edges.push({\r\n        lightblue : getColor(\"lightblue\",15),\r\n        purple : getColor(\"purple\",17)\r\n    });\r\n    // Edge piece 28 of 30\r\n    pieces.edges.push({\r\n        lightblue : getColor(\"lightblue\",13),\r\n        orange : getColor(\"orange\",17)\r\n    });\r\n    // Edge piece 29 of 30\r\n    pieces.edges.push({\r\n        lightblue : getColor(\"lightblue\",21),\r\n        lightgreen : getColor(\"lightgreen\",17)\r\n    });\r\n    // Edge piece 30 of 30\r\n    pieces.edges.push({\r\n        lightblue : getColor(\"lightblue\",19),\r\n        lightbrown : getColor(\"lightbrown\",17)\r\n    });\r\n\r\n    return type?pieces[type]:pieces;\r\n\r\n}\r\n\r\nexport default pieces;","// Changes decaObject directly\r\nlet swapColors = (face,deca,speed) =>{\r\n\r\n    // Pulls the hex color value from piece\r\n    let hex = piece => piece.material.color.getHex();\r\n\r\n    // Copies b's color to a\r\n    let setColor = (a,b) => a.material.color.set(hex(b));\r\n\r\n    // Variables used for rotating front colors\r\n    let front =  deca[face].front;\r\n    let tempColor = hex(front[3]);\r\n    let tempColor2 = hex(front[13]);\r\n\r\n    // Swaps all the front facing colors\r\n    if(speed>0){\r\n        setColor(front[3],front[5]);\r\n        setColor(front[5],front[7]);\r\n        setColor(front[7],front[9]);\r\n        setColor(front[9],front[11]);\r\n        front[11].material.color.set(tempColor);\r\n\r\n        setColor(front[13],front[15]);\r\n        setColor(front[15],front[17]);\r\n        setColor(front[17],front[19]);\r\n        setColor(front[19],front[21]);\r\n        front[21].material.color.set(tempColor2);\r\n    }else{\r\n        setColor(front[3],front[11]);\r\n        setColor(front[11],front[9]);\r\n        setColor(front[9],front[7]);\r\n        setColor(front[7],front[5]);\r\n        front[5].material.color.set(tempColor);\r\n\r\n        setColor(front[13],front[21]);\r\n        setColor(front[21],front[19]);\r\n        setColor(front[19],front[17]);\r\n        setColor(front[17],front[15]);\r\n        front[15].material.color.set(tempColor2);\r\n    }\r\n\r\n    // Converts color to side number\r\n    let side = color => {\r\n        let colors = {\r\n            \"blue\": 1,\r\n            \"pink\": 2,\r\n            \"yellow\": 3,\r\n            \"red\": 4,\r\n            \"green\": 5,\r\n            \"lightpurple\":6,\r\n            \"lightblue\":7,\r\n            \"lightbrown\":8,\r\n            \"lightgreen\":9,\r\n            \"orange\":10,\r\n            \"purple\":11,\r\n            \"white\":12\r\n        }\r\n        return colors[color];\r\n    }\r\n\r\n    // extracts piece information given side and piece numbers\r\n    let extractEdge = (sideColor,pieces) => {\r\n        return {\r\n            left: deca[`face${side(sideColor)}`].front[pieces[0]],\r\n            center: deca[`face${side(sideColor)}`].front[pieces[1]],\r\n            right: deca[`face${side(sideColor)}`].front[pieces[2]]\r\n        }\r\n    }\r\n\r\n    // Rotate colors around clockwise or counterclockwise depending on speed\r\n    let swap = (e1,e2,e3,e4,e5,speed) => {\r\n        let tempLeft = hex(e1.left);\r\n        let tempCenter = hex(e1.center);\r\n        let tempRight = hex(e1.right);\r\n\r\n        if(speed>0){\r\n            //left edge\r\n            setColor(e1.left,e2.left);\r\n            setColor(e2.left,e3.left);\r\n            setColor(e3.left,e4.left);\r\n            setColor(e4.left,e5.left);\r\n            e5.left.material.color.set(tempLeft);\r\n\r\n            //center edge\r\n            setColor(e1.center,e2.center);\r\n            setColor(e2.center,e3.center);\r\n            setColor(e3.center,e4.center);\r\n            setColor(e4.center,e5.center);\r\n            e5.center.material.color.set(tempCenter);\r\n\r\n            setColor(e1.right,e2.right);\r\n            setColor(e2.right,e3.right);\r\n            setColor(e3.right,e4.right);\r\n            setColor(e4.right,e5.right);\r\n            e5.right.material.color.set(tempRight);\r\n        }else{\r\n            //left edge\r\n            setColor(e1.left,e5.left);\r\n            setColor(e5.left,e4.left);\r\n            setColor(e4.left,e3.left);\r\n            setColor(e3.left,e2.left);\r\n            e2.left.material.color.set(tempLeft);\r\n\r\n            //center edge\r\n            setColor(e1.center,e5.center);\r\n            setColor(e5.center,e4.center);\r\n            setColor(e4.center,e3.center);\r\n            setColor(e3.center,e2.center);\r\n            e2.center.material.color.set(tempCenter);\r\n\r\n            setColor(e1.right,e5.right);\r\n            setColor(e5.right,e4.right);\r\n            setColor(e4.right,e3.right);\r\n            setColor(e3.right,e2.right);\r\n            e2.right.material.color.set(tempRight);\r\n        }\r\n    }\r\n\r\n    // Variables for edge data\r\n    let edge1,edge2,edge3,edge4,edge5;\r\n\r\n    // Controls which side edge colors will be rotated with each front face\r\n    switch(face){\r\n        \r\n        // Front half\r\n        case 'face1': // blue\r\n            edge1 = extractEdge(\"green\",[9,17,7]); \r\n            edge2 = extractEdge(\"red\",[9,17,7]);\r\n            edge3 = extractEdge(\"yellow\",[9,17,7]);\r\n            edge4 = extractEdge(\"pink\",[9,17,7]);\r\n            edge5 = extractEdge(\"lightpurple\",[9,17,7]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face2': // pink\r\n            edge1 = extractEdge(\"lightbrown\",[5,13,3]); \r\n            edge2 = extractEdge(\"lightpurple\",[11,19,9]);\r\n            edge3 = extractEdge(\"blue\",[11,19,9]);\r\n            edge4 = extractEdge(\"yellow\",[7,15,5]);\r\n            edge5 = extractEdge(\"lightgreen\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face3': // yellow\r\n            edge1 = extractEdge(\"lightgreen\",[5,13,3]); \r\n            edge2 = extractEdge(\"pink\",[11,19,9]);\r\n            edge3 = extractEdge(\"blue\",[9,17,7]);\r\n            edge4 = extractEdge(\"red\",[7,15,5]);\r\n            edge5 = extractEdge(\"orange\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face4': // red\r\n            edge1 = extractEdge(\"orange\",[5,13,3]); \r\n            edge2 = extractEdge(\"yellow\",[11,19,9]);\r\n            edge3 = extractEdge(\"blue\",[7,15,5]);\r\n            edge4 = extractEdge(\"green\",[7,15,5]);\r\n            edge5 = extractEdge(\"purple\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face5': // green\r\n            edge1 = extractEdge(\"purple\",[5,13,3]); \r\n            edge2 = extractEdge(\"red\",[11,19,9]);\r\n            edge3 = extractEdge(\"blue\",[5,13,3]);\r\n            edge4 = extractEdge(\"lightpurple\",[7,15,5]);\r\n            edge5 = extractEdge(\"white\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face6': // green\r\n            edge1 = extractEdge(\"white\",[5,13,3]); \r\n            edge2 = extractEdge(\"green\",[11,19,9]);\r\n            edge3 = extractEdge(\"blue\",[3,21,11]);\r\n            edge4 = extractEdge(\"pink\",[7,15,5]);\r\n            edge5 = extractEdge(\"lightbrown\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n        \r\n        // Back half\r\n        case 'face7': // light blue\r\n            edge1 = extractEdge(\"orange\",[9,17,7]); \r\n            edge2 = extractEdge(\"purple\",[9,17,7]);\r\n            edge3 = extractEdge(\"white\",[9,17,7]);\r\n            edge4 = extractEdge(\"lightbrown\",[9,17,7]);\r\n            edge5 = extractEdge(\"lightgreen\",[9,17,7]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face8': // light brown\r\n            edge1 = extractEdge(\"pink\",[5,13,3]); \r\n            edge2 = extractEdge(\"lightgreen\",[11,19,9]);\r\n            edge3 = extractEdge(\"lightblue\",[11,19,9]);\r\n            edge4 = extractEdge(\"white\",[7,15,5]);\r\n            edge5 = extractEdge(\"lightpurple\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face9': // light green\r\n            edge1 = extractEdge(\"yellow\",[5,13,3]); \r\n            edge2 = extractEdge(\"orange\",[11,19,9]);\r\n            edge3 = extractEdge(\"lightblue\",[3,21,11]);\r\n            edge4 = extractEdge(\"lightbrown\",[7,15,5]);\r\n            edge5 = extractEdge(\"pink\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face10': // orange\r\n            edge1 = extractEdge(\"red\",[5,13,3]); \r\n            edge2 = extractEdge(\"purple\",[11,19,9]);\r\n            edge3 = extractEdge(\"lightblue\",[5,13,3]);\r\n            edge4 = extractEdge(\"lightgreen\",[7,15,5]);\r\n            edge5 = extractEdge(\"yellow\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face11': // purple\r\n            edge1 = extractEdge(\"green\",[5,13,3]); \r\n            edge2 = extractEdge(\"white\",[11,19,9]);\r\n            edge3 = extractEdge(\"lightblue\",[7,15,5]);\r\n            edge4 = extractEdge(\"orange\",[7,15,5]);\r\n            edge5 = extractEdge(\"red\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n\r\n        case 'face12': // yellow\r\n            edge1 = extractEdge(\"lightpurple\",[5,13,3]); \r\n            edge2 = extractEdge(\"lightbrown\",[11,19,9]);\r\n            edge3 = extractEdge(\"lightblue\",[9,17,7]);\r\n            edge4 = extractEdge(\"purple\",[7,15,5]);\r\n            edge5 = extractEdge(\"green\",[3,21,11]);\r\n            swap(edge1,edge2,edge3,edge4,edge5,speed)\r\n            break;\r\n        default:\r\n    }\r\n}\r\n\r\nexport default swapColors;","import swapColors from \"./swapColors\";\r\n\r\nconst utils = {\r\n    updateDeca : (moveSet,deca) => {\r\n        moveSet.forEach(move=>{\r\n            let speed=move.split('').includes(\"'\")?1:-1;\r\n            let face=\"face\"+move.replace(\"'\",\"\");\r\n            swapColors(face,deca,speed);\r\n        })\r\n    },\r\n\r\n    findPiece: (pieceArray,pieceToFind) => {\r\n        let piece = [];\r\n        let index = 0;\r\n        if(pieceToFind.length===2){\r\n            for(let i = 0; i<pieceArray.edges.length; i++){\r\n                let tempPiece = Object.values(pieceArray.edges[i]);\r\n                if(tempPiece.includes(pieceToFind[0])&&tempPiece.includes(pieceToFind[1])){\r\n                    piece = pieceArray.edges[i];\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return [piece,index];\r\n    },\r\n\r\n    isSolved: piece => {\r\n        let pieceKeys = Object.keys(piece);\r\n        let pieceValues = Object.values(piece);\r\n        let solvedPairs = pieceKeys.filter((sticker,i)=>sticker===pieceValues[i]);\r\n        return solvedPairs.length===pieceKeys.length;\r\n    },\r\n\r\n    reverseMove: move => {\r\n        console.log(move);\r\n        return move.split('').includes(\"'\")?move.replace(\"'\",\"\"):move+\"'\"\r\n    }\r\n}\r\n\r\nexport default utils;","import blueStar from \"./blueStar\";\r\nimport pieces from \"./pieces\";\r\nimport swapColors from \"./swapColors\";\r\nimport utils from \"./utils\";\r\n\r\nlet solve = decaObject => {\r\n    let flattened = Object.values(decaObject).map(set=>Object.values(set)).flat(2).filter(mesh=>mesh.side);\r\n    let extractedColors = [...flattened.map(mesh=>mesh.material.color)];\r\n\r\n    let solveState = 0;\r\n    let solveIndex = 0;\r\n\r\n    let moves = [];\r\n\r\n    let setSolveState = () => solveState++;\r\n    \r\n    let solveOrder = [\r\n        [\"green\",\"blue\"],\r\n        [\"red\",\"blue\"],\r\n        [\"yellow\",\"blue\"],\r\n        [\"pink\",\"blue\"],\r\n        [\"lightpurple\",\"blue\"]\r\n    ]\r\n\r\n    while (solveIndex<solveOrder.length){\r\n        let allPieces = pieces(decaObject);\r\n        let pieceToSolve = utils.findPiece(allPieces,solveOrder[solveIndex]);\r\n        if(utils.isSolved(pieceToSolve[0])){\r\n            console.log(\"Piece solved: \",JSON.stringify(pieceToSolve[0]))\r\n            solveIndex++;\r\n        }\r\n        else if(solveIndex<5){\r\n                let set = blueStar(...pieceToSolve);\r\n                if(set[0]) utils.updateDeca(set,decaObject);\r\n                set[0]?moves.push(...set):solveIndex++; \r\n        }\r\n    }\r\n\r\n    moves.reverse();\r\n    let reversedMoves = moves.map(move=>move.includes(\"'\")?move.replace(\"'\",\"\"):move+\"'\");\r\n    utils.updateDeca(reversedMoves,decaObject);\r\n    moves.reverse();\r\n\r\n    return moves;\r\n}\r\n\r\nexport default solve;","import { useEffect, useState } from \"react\";\r\nimport \"./Solver.css\";\r\nimport solve from \"./solve\";\r\nimport utils from \"./utils\";\r\nimport SpeedSlider from \"../SpeedSlider/SpeedSlider\";\r\n\r\nconst Solver = ({getCounter,setMoveQueue,setMenuId,setCurrentFunction,decaObject,speed,setSpeed}) => {\r\n\r\n    const [moves,setMoves] = useState([]);\r\n    const [loadMessage,setLoadMessage] = useState(\"Loading ...\");\r\n    const [currentMove,setCurrentMove] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        console.log(\"yo\");\r\n        let solveMoves = [].concat(solve(decaObject));\r\n        setCurrentMove(0);\r\n        for(let i = 0;i<solveMoves.length;i++){\r\n            if(solveMoves.length-3){\r\n                if(solveMoves[i]===solveMoves[i+1]&&solveMoves[i]===solveMoves[i+2]&&solveMoves[i]===solveMoves[i+3]){\r\n                    let reversed = utils.reverseMove(solveMoves[i])\r\n                    solveMoves.splice(i,4,reversed);\r\n                }\r\n            }\r\n            if(i<solveMoves.length-2){\r\n                if(solveMoves[i]===solveMoves[i+1]&&solveMoves[i]===solveMoves[i+2]){\r\n                    let reversed = utils.reverseMove(solveMoves[i]);\r\n                    solveMoves.splice(i,3,reversed,reversed);\r\n                }\r\n            }\r\n            if(i<solveMoves.length-1){\r\n                let base = move => move.replace(\"'\",\"\");\r\n                if(solveMoves[i]!==solveMoves[i+1]&&base(solveMoves[i])===base(solveMoves[i+1])){\r\n                    solveMoves.splice(i,2);\r\n                }\r\n            }\r\n        }\r\n        console.log(solveMoves)\r\n        setMoves(solveMoves);\r\n        setLoadMessage(\"Already solved\")\r\n    },[]);\r\n\r\n    let jumpToMove = value => {\r\n        if(currentMove<value) {\r\n            let movesToJump = moves.slice(currentMove,value);\r\n            utils.updateDeca(movesToJump,decaObject);\r\n            console.log(movesToJump);\r\n            setCurrentMove(value);\r\n        }\r\n        else {\r\n            let movesToJump = moves.slice(value,currentMove);\r\n            movesToJump.reverse();\r\n            movesToJump = movesToJump.map(move=>utils.reverseMove(move));\r\n            utils.updateDeca(movesToJump,decaObject);\r\n            console.log(movesToJump);\r\n            setCurrentMove(value);\r\n        }\r\n    }\r\n    \r\n    let playOne = () =>{\r\n        if(getCounter()) return;\r\n        if(currentMove<moves.length){\r\n            setMoveQueue([moves[currentMove]]);\r\n            setCurrentMove(currentMove+1);\r\n        }\r\n    }\r\n\r\n    let backOne = () =>{\r\n        if(getCounter()) return;\r\n        if(currentMove>0){\r\n            setMoveQueue([utils.reverseMove(moves[currentMove-1])]);\r\n            setCurrentMove(currentMove-1);\r\n        }\r\n    }\r\n\r\n    let exitSolver = () => {\r\n        setMenuId(0);\r\n        setCurrentFunction('none');\r\n    }\r\n\r\n    return (\r\n        <div className=\"solver-container\">\r\n            <SpeedSlider \r\n                speed={speed}\r\n                setSpeed={setSpeed} \r\n            />\r\n            <div className=\"solver-panel moves-container\">\r\n                {\r\n                    moves.length?\r\n                        moves.map((move,i)=>i===currentMove?\r\n                            <div key={i} className=\"moves current-move\">{move}</div>:\r\n                            <div key={i} className=\"moves\" onClick={()=>jumpToMove(i)}>{move}</div>\r\n                        ):\r\n                        loadMessage\r\n                }\r\n            </div>\r\n            <div className=\"solver-panel controls-container\">\r\n                <div className=\"controls-wrapper\">\r\n                    <div className=\"control-button\" onClick={playOne}>\r\n                        Next\r\n                    </div>\r\n                    <div className=\"control-button\" onClick={backOne}>\r\n                        Back\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"controls-wrapper\">\r\n                    <div className=\"control-button\" onClick={()=>{}}>\r\n                        Auto play\r\n                    </div>\r\n                    <div className=\"control-button\">\r\n                        Auto back\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"controls-wrapper\">\r\n                    <div className=\"control-button exit-button\" onClick={exitSolver}>\r\n                        Exit\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Solver;","import \"./Menu.css\";\r\nimport Main from \"../Main/Main\";\r\nimport ColorPicker from \"../ColorPicker/ColorPicker\";\r\nimport Solver from \"../Solver/Solver\"\r\nimport { useState } from \"react\";\r\n\r\nconst Menu = ({currentMove,setCurrentMove,getCounter,setMoveLogIndex,setMoveQueue,resetMegaMinx,reset,setCurrentFunction,currentFunction,setColor,getColor,speed,setSpeed,decaObject}) => {\r\n\r\n    const [menuId,setMenuId] = useState(0);\r\n\r\n    let menus = [\r\n        <Main \r\n            setMoveQueue={setMoveQueue}\r\n            reset={reset}\r\n            setMenuId={setMenuId}\r\n            setCurrentFunction={setCurrentFunction}\r\n            currentFunction={currentFunction}\r\n            speed={speed}\r\n            setSpeed={setSpeed}\r\n            setMoveLogIndex={setMoveLogIndex}\r\n        />,\r\n        <ColorPicker \r\n            setMenuId={setMenuId}\r\n            setCurrentFunction={setCurrentFunction}\r\n            getColor={getColor}\r\n            setColor={setColor}\r\n            resetMegaMinx={resetMegaMinx}\r\n        />,\r\n        <Solver\r\n            setMenuId={setMenuId}\r\n            setMoveQueue={setMoveQueue}\r\n            setCurrentFunction={setCurrentFunction}\r\n            decaObject={decaObject}\r\n            speed={speed}\r\n            setSpeed={setSpeed}\r\n            getCounter={getCounter}\r\n        />,\r\n        <div></div>\r\n    ]\r\n\r\n    return (\r\n        <div className=\"menu-box-container\">\r\n            <div className=\"menu-box\">\r\n                {menus[menuId]}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Menu;","import * as THREE from \"three\";\r\nimport {CameraControls, dToR, rotate_point} from \"./utils.js\";\r\nimport Corner from \"./CornerDimensions\";\r\nimport Edge from \"./EdgeDimensions\";\r\nimport swapColors from \"./swapColors\";\r\nimport facesToHide from \"./facesToHide\";\r\nimport colorMatchUps from \"./colorMatchUps\";\r\nimport facePos from \"./facePositions\";\r\nimport calculateTurn from \"./calculateTurn\";\r\nimport \"./MegaMinx.css\"\r\nimport { useEffect, useState } from \"react\";\r\nimport Menu from \"../Menu/Menu\";\r\n\r\n/*\r\n\r\nISSUES:\r\n    MOBILE:\r\n        - All clear at the moment!\r\n    GENERAL:\r\n        - All clear nice job!\r\nTODO:\r\n    1. Solver\r\n    2. Patterns\r\n    3. Mess with some offsets to make megaminx seemless\r\n*/\r\n\r\nconst MegaMinx = ({reset}) => {\r\n\r\n    // Added csc to Math library\r\n    Math.csc = function(x) { return 1 / Math.sin(x); }\r\n\r\n    \r\n\r\n    // UI and megaminx controller variables\r\n    let faceToRotate = \"face0\"; // Controls which face will rotate\r\n    let moveQueue = []; // Moves in here will be immediately played\r\n    let moveLog = [];\r\n    let moveLogIndex = 0;\r\n    let speedChanged = false; // Signals a queued speed change\r\n    let speedHolder = 12; // Queued speed change\r\n    let speed = 12; // Default move speed (must divide evenly into 72)\r\n    let counter = 0; // Theta counter for piece rotation (counts to 72)\r\n    let updateMouse = false; // Signals mouse can be updated in mousemove\r\n    let currentFunc = \"none\"; // Current state of the menu\r\n    let currentColor = \"blue\"; // Color used by colorpicker (default blue)\r\n    let undoRedo = false;\r\n\r\n    // Used for touch/mouse rotations\r\n    let startPoint = null;\r\n    let newPoint = null;\r\n    let selectedSide = null;\r\n    let selectedPiece = null;\r\n\r\n    // Threejs variables\r\n    let scene = new THREE.Scene();\r\n    let camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, .1, 1000 );\r\n    let renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n    let raycaster = new THREE.Raycaster();\r\n    let mouse = new THREE.Vector2();\r\n    let controls = CameraControls(camera, renderer,scene);\r\n\r\n    // Setter for moveQueue\r\n    let setMoveQueue = (moves) => {\r\n        moveQueue = !moveQueue.length?moves:moveQueue;\r\n    }\r\n\r\n    let getCounter = () => counter;\r\n\r\n    // getter and setter for speed holder\r\n    let getSpeed = () => speedHolder;\r\n    let setSpeed = speed => {\r\n        switch(speed){\r\n            case 0:\r\n                speedHolder = .25;\r\n                break;\r\n            case 1:\r\n                speedHolder = .5;\r\n                break;\r\n            case 2:\r\n                speedHolder = 1;\r\n                break;\r\n            case 3:\r\n                speedHolder = 3;\r\n                break;\r\n            case 4:\r\n                speedHolder = 6;\r\n                break;\r\n            case 5:\r\n                speedHolder = 12;\r\n                break;\r\n            case 6:\r\n                speedHolder = 24;\r\n                break;\r\n            case 7:\r\n                speedHolder = 72;\r\n                break;\r\n            default:\r\n        }\r\n        speedChanged=true\r\n    }\r\n\r\n    let reverseMove = move => {\r\n        console.log(move);\r\n        return move.split('').includes(\"'\")?move.replace(\"'\",\"\"):move+\"'\"\r\n    }\r\n\r\n    let getMoveLogIndex = () => moveLogIndex;\r\n    let setMoveLogIndex = n => {\r\n        \r\n        console.log(moveLogIndex)\r\n\r\n        if(n>=0&&moveLogIndex<=moveLog.length-1){\r\n            undoRedo=true;\r\n            moveQueue.push(moveLog[moveLogIndex])\r\n            moveLogIndex++;\r\n        } \r\n\r\n        else if(n<0&&moveLogIndex>0){\r\n            undoRedo=true;\r\n            moveLogIndex--;\r\n            moveQueue.push(reverseMove(moveLog[moveLogIndex]));\r\n        }\r\n\r\n    }\r\n\r\n    // getter and setter for current color\r\n    let getCurrentColor = () => currentColor;\r\n    let setCurrentColor = color => currentColor=color\r\n\r\n    // getter and setter for currentFunc\r\n    let currentFunction = () => currentFunc;\r\n    let setCurrentFunction = func => currentFunc = func;\r\n\r\n    // Holds references to all the rendered pieces\r\n    let decaObject = {\r\n    }\r\n    \r\n    // Set background color and size\r\n    renderer.setClearColor(new THREE.Color(\"black\"),0);\r\n    renderer.domElement.className = \"canvas\";\r\n    renderer.setSize( window.innerWidth, window.innerHeight);\r\n\r\n    camera.position.z = 15;\r\n    camera.position.y = 0;\r\n    camera.position.x = 0;\r\n\r\n    //camera.translateZ(-2.9275/2);\r\n    renderer.render( scene, camera );\r\n\r\n    function onMouseDown(e) {\r\n        // update mouse position\r\n        mouse.x = (e.clientX / window.innerWidth) * 2 - 1;\r\n        mouse.y = -(e.clientY / window.innerHeight) * 2 + 1;\r\n\r\n        // reset piece selection data\r\n        startPoint = null;\r\n        selectedSide = null;\r\n        selectedPiece = null;\r\n        \r\n        // Set the raycaster to check for intersected objects\r\n        raycaster.setFromCamera( mouse, camera );\r\n\r\n        const intersects = raycaster.intersectObjects( scene.children );\r\n\r\n        // Filter only pieces that should be interacted with\r\n        let filteredIntersects = intersects.filter(\r\n            e=>e.object.name===\"corner\"||e.object.name===\"edge\"\r\n        );\r\n\r\n        let filteredCenters = intersects.filter(e=>\r\n            e.object.name===\"center\"\r\n        );\r\n\r\n        // if a piece is intersected disable camera rotation\r\n        if(intersects[0]) {\r\n            controls.enabled = false;\r\n        }\r\n\r\n        // Enable mouse movement position updating\r\n        if(\r\n            filteredIntersects[0] && \r\n            !moveQueue.length \r\n            && [\"none\",\"solver\",\"patterns\"].includes(currentFunc)\r\n        ){\r\n            updateMouse = true;\r\n\r\n            // Values to be used for touch turns\r\n            selectedPiece = filteredIntersects[0].object.piece;\r\n\r\n            // Testing for piece 8 first\r\n            if((selectedPiece>0&&selectedPiece<11)){\r\n\r\n                startPoint = filteredIntersects[0].uv;\r\n                selectedSide = filteredIntersects[0].object.side;\r\n                // console.log(`Testing piece ${selectedPiece}`)\r\n                // console.log(\"2D vector: \"+startPoint)\r\n                // console.log(\"Face piece number: \"+selectedPiece)\r\n                // console.log(\"Side: \"+selectedSide);\r\n            }\r\n        }\r\n        // For non interactable pieces\r\n        else if(!filteredIntersects[0]&&intersects[0]){\r\n            updateMouse = true;\r\n            selectedPiece = intersects[0].object.piece;\r\n        }\r\n\r\n        // Change the clicked piece color to the selected color\r\n        if(currentFunc===\"colorpicker\"&&filteredIntersects[0]){\r\n            filteredIntersects[0].object.material.color.set(currentColor)\r\n        }\r\n\r\n        // console.log(\"-----------------------------\")\r\n    }\r\n\r\n    function onMouseUp(e) {\r\n        controls.enabled = true;\r\n        updateMouse=false;\r\n    }\r\n\r\n    function onMouseMove(e){\r\n        if(e.pointerType===\"touch\") controls.enabled = true;\r\n        // If no piece was clicked end function\r\n        if(!updateMouse) {\r\n            return;\r\n        }\r\n        \r\n        // Get new mouse coordinates\r\n        mouse.x = (e.clientX / window.innerWidth) * 2 - 1;\r\n        mouse.y = -(e.clientY / window.innerHeight) * 2 + 1;\r\n\r\n        // set up raycaster to detect intersected objects\r\n        raycaster.setFromCamera( mouse, camera );\r\n\r\n        // any intersected objects go in here\r\n        const intersects = raycaster.intersectObjects( scene.children );\r\n\r\n        // Filter only pieces that should be interacted with\r\n        let filteredIntersects = intersects.filter(\r\n            e=>e.object.name===\"corner\"||e.object.name===\"edge\"\r\n        );\r\n\r\n        if(filteredIntersects[0]){\r\n            newPoint = filteredIntersects[0].uv;\r\n            let turn = calculateTurn(startPoint,newPoint,selectedSide,selectedPiece);\r\n            if(turn) {\r\n                updateMouse=false;\r\n                startPoint=null;\r\n                newPoint=null;\r\n                selectedSide=null;\r\n                selectedPiece=null;\r\n                moveQueue.push(turn);\r\n            }\r\n        }\r\n        else if(!filteredIntersects[0]&&intersects[0]){\r\n            if(!startPoint) return;\r\n            console.log(\"hit edge\");\r\n            let turn = calculateTurn(startPoint,newPoint,selectedSide,selectedPiece,true);\r\n            if(turn) {\r\n                updateMouse=false;\r\n                startPoint=null;\r\n                newPoint=null;\r\n                selectedSide=null;\r\n                selectedPiece=null;\r\n                moveQueue.push(turn);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Event listeners\r\n    window.addEventListener(\"resize\", \r\n        () => {\r\n            let tanFOV = Math.tan( ( ( Math.PI / 180 ) * camera.fov / 2 ) );\r\n            let windowHeight = window.innerHeight;\r\n\r\n            camera.aspect = window.innerWidth / window.innerHeight;\r\n            \r\n            // adjust the FOV\r\n            camera.fov = ( 360 / Math.PI ) * Math.atan( tanFOV * ( window.innerHeight / windowHeight ) );\r\n            \r\n            camera.updateProjectionMatrix();\r\n            camera.lookAt( scene.position );\r\n\r\n            renderer.setSize( window.innerWidth, window.innerHeight );\r\n            renderer.render( scene, camera );\r\n        }, false\r\n    );\r\n\r\n    useEffect(()=>{\r\n\r\n        function removeElementsByClass(className){\r\n            const elements = document.getElementsByClassName(className);\r\n            while(elements.length > 0){\r\n                elements[0].parentNode.removeChild(elements[0]);\r\n            }\r\n        }\r\n        removeElementsByClass(\"canvas\");\r\n\r\n        document.body.children[1].appendChild( renderer.domElement );\r\n        window.addEventListener(\"pointerdown\",onMouseDown,false);\r\n        window.addEventListener(\"pointerup\",onMouseUp,false);\r\n        window.addEventListener(\"pointermove\",onMouseMove,false);\r\n\r\n        // window.addEventListener(\"touchstart\",onMouseDown,false);\r\n        // window.addEventListener(\"touchend\",onMouseUp,false);\r\n        // window.addEventListener(\"touchmove\",onMouseMove,false);\r\n\r\n        return function cleanup () {\r\n            window.removeEventListener(\"pointerdown\",onMouseDown,false)\r\n            window.removeEventListener(\"pointerup\",onMouseUp,false)\r\n            window.removeEventListener(\"pointermove\",onMouseMove,false);\r\n        }\r\n    })\r\n\r\n    function pentagonMesh(n,translate,rotate,color,i)\r\n    {\r\n        let pentagonMesh,pentagonMesh2;\r\n        const lineWidth = .97;\r\n        n=n?n:1;\r\n        color=color?color:\"grey\";\r\n        const pentagon = new THREE.Shape();\r\n        const pentagon2 = new THREE.Shape();\r\n\r\n        // https://mathworld.wolfram.com/RegularPentagon.html\r\n        const c1 = Math.cos((2*Math.PI)/5);\r\n        const c2 = Math.cos(Math.PI/5);\r\n        const s1 = Math.sin((2*Math.PI)/5);\r\n        const s2 = Math.sin((4*Math.PI)/5);\r\n        \r\n        pentagon.moveTo(0, 1*n);\r\n        pentagon.lineTo(s1*n, c1*n);\r\n        pentagon.lineTo(s2*n, -c2*n);\r\n        pentagon.lineTo(-s2*n, -c2*n);\r\n        pentagon.lineTo(-s1*n, c1*n);\r\n\r\n        pentagon2.moveTo((0)*lineWidth, (1*n)*lineWidth);\r\n        pentagon2.lineTo((s1*n)*lineWidth, (c1*n)*lineWidth);\r\n        pentagon2.lineTo((s2*n)*lineWidth, (-c2*n)*lineWidth);\r\n        pentagon2.lineTo((-s2*n)*lineWidth, (-c2*n)*lineWidth);\r\n        pentagon2.lineTo((-s1*n)*lineWidth, (c1*n)*lineWidth);\r\n        \r\n        const geometry = new THREE.ShapeGeometry(pentagon);\r\n        const geometry2 = new THREE.ShapeGeometry(pentagon2);\r\n    \r\n        const material = new THREE.MeshBasicMaterial({\r\n            color: \"black\",\r\n            side: THREE.DoubleSide,\r\n            depthWrite: true,\r\n        });\r\n        const material2 = new THREE.MeshBasicMaterial({\r\n            color: color,\r\n            side: THREE.FrontSide,\r\n            depthWrite: true,\r\n            });\r\n    \r\n        pentagonMesh = new THREE.Mesh(geometry,material);\r\n        pentagonMesh2 = new THREE.Mesh(geometry2,material2);\r\n        pentagonMesh2.name = \"center\";\r\n        pentagonMesh2.side = colorNames[i];;\r\n        \r\n\r\n        let offsetZ =.205;\r\n        let offsetY = -.81;\r\n\r\n        pentagonMesh.translateZ(translate?.z||0)\r\n\r\n        pentagonMesh.rotateZ(rotate?.z||0)\r\n        pentagonMesh.rotateY(rotate?.y||0)\r\n        \r\n        pentagonMesh.translateY(translate?.y||0)\r\n        pentagonMesh.translateX(translate?.x||0)\r\n\r\n        pentagonMesh.rotateX(rotate?.x||0)\r\n\r\n        pentagonMesh.translateZ(-translate?.y/2+offsetZ||0)\r\n        pentagonMesh.translateY(translate?.y/2+offsetY||0)\r\n\r\n        i<6?\r\n            pentagonMesh2.translateZ(translate?.z+.01||0):\r\n            pentagonMesh2.translateZ(translate?.z-.01||0)\r\n\r\n        pentagonMesh2.rotateZ(rotate?.z||0)\r\n        pentagonMesh2.rotateY(rotate?.y||0)\r\n        \r\n        pentagonMesh2.translateY(translate?.y||0)\r\n        pentagonMesh2.translateX(translate?.x||0)\r\n\r\n        pentagonMesh2.rotateX(rotate?.x||0)\r\n\r\n        pentagonMesh2.translateZ(-translate?.y/2+offsetZ||0)\r\n        pentagonMesh2.translateY(translate?.y/2+offsetY||0)\r\n        \r\n        scene.add(pentagonMesh,pentagonMesh2);       \r\n\r\n        // Adds all front pieces faces in decaObject\r\n        decaObject[`face${i+1}`].front.push(pentagonMesh,pentagonMesh2);\r\n    }\r\n\r\n    // \r\n    function squareMesh (n,position,position2,translate,rotate,color,i,piece)\r\n    {\r\n        const square = new THREE.Shape();\r\n        const square2 = new THREE.Shape();\r\n\r\n        //console.log(square.lineTo)\r\n        square.moveTo(...position.p1,5);\r\n        square.lineTo(...position.p2,1);\r\n        square.lineTo(...position.p3,3);\r\n        square.lineTo(...position.p4,4);\r\n\r\n        square2.moveTo(...position2.p1,5);\r\n        square2.lineTo(...position2.p2,1);\r\n        square2.lineTo(...position2.p3,3);\r\n        square2.lineTo(...position2.p4,4);\r\n\r\n        const geometry = new THREE.ShapeGeometry(square);\r\n        const geometry2 = new THREE.ShapeGeometry(square2);\r\n\r\n        const material = new THREE.MeshBasicMaterial({\r\n            color: \"black\",\r\n            side: THREE.DoubleSide,\r\n            depthWrite: true\r\n        });\r\n        const material2 = new THREE.MeshBasicMaterial({\r\n            color: color,\r\n            side: THREE.FrontSide,\r\n            depthWrite: true\r\n        });\r\n\r\n        let squareMesh = new THREE.Mesh(geometry,material);\r\n        let squareMesh2 = new THREE.Mesh(geometry2,material2);\r\n        if(piece>0&&piece<6) squareMesh2.name=\"corner\";\r\n        if(piece>5&&piece<11) squareMesh2.name=\"edge\";\r\n\r\n        squareMesh2.piece = piece;\r\n        squareMesh2.side = colorNames[i];\r\n\r\n        squareMesh2.scale.set(.95,.95)\r\n\r\n        squareMesh.translateZ(translate?.z||0)\r\n        i<6?\r\n            squareMesh2.translateZ(translate?.z+.005||0):\r\n            squareMesh2.translateZ(translate?.z-.005||0)\r\n\r\n        let offsetZ =.205;\r\n        let offsetY = -.81;\r\n        \r\n        // Black background (outline effect)\r\n        squareMesh.rotateZ(rotate?.z||0)\r\n        squareMesh.rotateY(rotate?.y||0)\r\n        \r\n        squareMesh.translateY(translate?.y||0)\r\n        squareMesh.translateX(translate?.x||0)\r\n\r\n        squareMesh.rotateX(rotate?.x||0)\r\n\r\n        squareMesh.translateZ(-translate?.y/2+offsetZ||0)\r\n        squareMesh.translateY(translate?.y/2+offsetY||0)\r\n\r\n        // Colored inner face\r\n        squareMesh2.rotateZ(rotate?.z||0)\r\n        squareMesh2.rotateY(rotate?.y||0)\r\n        \r\n        squareMesh2.translateY(translate?.y||0)\r\n        squareMesh2.translateX(translate?.x||0)\r\n\r\n        squareMesh2.rotateX(rotate?.x||0)\r\n\r\n        squareMesh2.translateZ(-translate?.y/2+offsetZ||0)\r\n        squareMesh2.translateY(translate?.y/2+offsetY||0)\r\n\r\n\r\n        if(piece>10){\r\n            squareMesh.rotateZ(dToR(-36+-(72*(piece-11))))\r\n            squareMesh.rotateX(dToR(-63.2))\r\n\r\n            squareMesh2.rotateZ(dToR(-36+-(72*(piece-11))))\r\n            squareMesh2.rotateX(dToR(-63.2))\r\n\r\n            squareMesh.translateZ(1.625)\r\n            squareMesh.translateY(-1)\r\n\r\n            squareMesh2.translateZ(1.631)\r\n            squareMesh2.translateY(-.895)\r\n        }\r\n\r\n        scene.add(squareMesh,squareMesh2);\r\n\r\n        // Adds all front pieces faces in decaObject\r\n        piece<11?\r\n            decaObject[`face${i+1}`].front.push(squareMesh,squareMesh2):\r\n            decaObject[`face${i+1}`].sides.push(squareMesh,squareMesh2);\r\n\r\n        if(piece>10) {\r\n            squareMesh.visible=false;\r\n            squareMesh2.visible=false;\r\n        }\r\n        \r\n    }\r\n\r\n    // array of face colors/hex in the order they're generated\r\n    let faceColors = [\r\n        \"blue\",     // 1\r\n        \"#ff80ce\",     // 2 pink\r\n        \"yellow\",   // 3\r\n        \"red\",      // 4\r\n        \"green\",    // 5\r\n        \"#c585f7\",  // 6 light purple\r\n\r\n        \"#4fc3f7\",  // 7 light blue\r\n        \"#C39B77\",  // 8 light brown\r\n        \"#64dd17\",  // 9 light green\r\n        \"orange\",   // 10\r\n        \"purple\",   // 11\r\n        \"white\"     // 12\r\n    ];\r\n\r\n    // array of face color names in the order they're generated\r\n    let colorNames = [\r\n        \"blue\",     // 1\r\n        \"pink\",     // 2 pink\r\n        \"yellow\",   // 3\r\n        \"red\",      // 4\r\n        \"green\",    // 5\r\n        \"lightpurple\",  // 6 light purple\r\n        \"lightblue\",  // 7 light blue\r\n        \"lightbrown\",  // 8 light brown\r\n        \"lightgreen\",  // 9 light green\r\n        \"orange\",   // 10\r\n        \"purple\",   // 11\r\n        \"white\"     // 12\r\n    ]\r\n    \r\n    // groups all the meshes for a face together\r\n    function decaFace(n,translate,rotate,color,i){\r\n            //if(i>1) return\r\n        // generate object structure on each face initialization\r\n\r\n        pentagonMesh(n,translate,rotate,color,i);\r\n\r\n        squareMesh(n,Corner(n,\"face1\",\"corner1\"),Corner(n,\"face1\",\"corner1\",1),translate,rotate,color,i,1);\r\n        squareMesh(n,Corner(n,\"face1\",\"corner2\"),Corner(n,\"face1\",\"corner2\",1),translate,rotate,color,i,2);\r\n        squareMesh(n,Corner(n,\"face1\",\"corner3\"),Corner(n,\"face1\",\"corner3\",1),translate,rotate,color,i,3);\r\n        squareMesh(n,Corner(n,\"face1\",\"corner4\"),Corner(n,\"face1\",\"corner4\",1),translate,rotate,color,i,4);\r\n        squareMesh(n,Corner(n,\"face1\",\"corner5\"),Corner(n,\"face1\",\"corner5\",1),translate,rotate,color,i,5);\r\n\r\n        squareMesh(n,Edge(n,\"face1\",\"edge1\"),Edge(n,\"face1\",\"edge1\",1),translate,rotate,color,i,6)\r\n        squareMesh(n,Edge(n,\"face1\",\"edge2\"),Edge(n,\"face1\",\"edge2\",1),translate,rotate,color,i,7)\r\n        squareMesh(n,Edge(n,\"face1\",\"edge3\"),Edge(n,\"face1\",\"edge3\",1),translate,rotate,color,i,8)\r\n        squareMesh(n,Edge(n,\"face1\",\"edge4\"),Edge(n,\"face1\",\"edge4\",1),translate,rotate,color,i,9)\r\n        squareMesh(n,Edge(n,\"face1\",\"edge5\"),Edge(n,\"face1\",\"edge5\",1),translate,rotate,color,i,10)\r\n\r\n        squareMesh(n,Edge(n,\"sides\",\"side1\"),Edge(n,\"sides\",\"side1\",2),translate,rotate,color,i,11);\r\n        squareMesh(n,Edge(n,\"sides\",\"side1\"),Edge(n,\"sides\",\"side1\",2),translate,rotate,color,i,12);\r\n        squareMesh(n,Edge(n,\"sides\",\"side1\"),Edge(n,\"sides\",\"side1\",2),translate,rotate,color,i,13);\r\n        squareMesh(n,Edge(n,\"sides\",\"side1\"),Edge(n,\"sides\",\"side1\",2),translate,rotate,color,i,14);\r\n        squareMesh(n,Edge(n,\"sides\",\"side1\"),Edge(n,\"sides\",\"side1\",2),translate,rotate,color,i,15);\r\n\r\n        squareMesh(n,Corner(n,\"sides\",\"side1a\"),Corner(n,\"sides\",\"side1a\",1),translate,rotate,color,i,16);\r\n        squareMesh(n,Corner(n,\"sides\",\"side1a\"),Corner(n,\"sides\",\"side1a\",1),translate,rotate,color,i,17);\r\n        squareMesh(n,Corner(n,\"sides\",\"side1a\"),Corner(n,\"sides\",\"side1a\",1),translate,rotate,color,i,18);\r\n        squareMesh(n,Corner(n,\"sides\",\"side1a\"),Corner(n,\"sides\",\"side1a\",1),translate,rotate,color,i,19);\r\n        squareMesh(n,Corner(n,\"sides\",\"side1a\"),Corner(n,\"sides\",\"side1a\",1),translate,rotate,color,i,20);\r\n\r\n        squareMesh(n,Corner(n,\"sides\",\"side1b\"),Corner(n,\"sides\",\"side1b\",1),translate,rotate,color,i,21);\r\n        squareMesh(n,Corner(n,\"sides\",\"side1b\"),Corner(n,\"sides\",\"side1b\",1),translate,rotate,color,i,22);\r\n        squareMesh(n,Corner(n,\"sides\",\"side1b\"),Corner(n,\"sides\",\"side1b\",1),translate,rotate,color,i,23);\r\n        squareMesh(n,Corner(n,\"sides\",\"side1b\"),Corner(n,\"sides\",\"side1b\",1),translate,rotate,color,i,24);\r\n        squareMesh(n,Corner(n,\"sides\",\"side1b\"),Corner(n,\"sides\",\"side1b\",1),translate,rotate,color,i,25);\r\n    }\r\n\r\n    // Generate object of piece references\r\n    facePos.forEach((set,i)=>{decaObject[`face${i+1}`]={front : [],sides : []}});\r\n\r\n    // Put the MegaMinx on the screen!\r\n    facePos.forEach((set,i)=>decaFace(1,set.translate,set.rotate,faceColors[i],i));\r\n\r\n    // Rotates a given face of the megaminx\r\n    let rotateFace = (face) => {\r\n        let tempSpeed = speed;\r\n\r\n        // if a move isn't currently being made\r\n        if(counter===0&&faceToRotate===\"face0\"){\r\n\r\n            // update speed changes\r\n            if(speedChanged){\r\n                speedChanged = false;\r\n                speed = speedHolder;\r\n                tempSpeed=speed;\r\n                //console.log(\"Speed changed to: \"+speedHolder)\r\n            }\r\n\r\n            // moveLog handling\r\n            if(moveQueue[0]) {\r\n                let move = moveQueue.shift();\r\n                faceToRotate='face'+move;\r\n\r\n                // if a move is being made in the middle of the log, snip tail\r\n                if(!undoRedo) {\r\n                    moveLog = moveLog.slice(0,moveLogIndex);\r\n                    moveLogIndex++;\r\n                    moveLog.push(move);\r\n                }\r\n\r\n                else {\r\n                    undoRedo=false;\r\n                }\r\n\r\n                if(faceToRotate.split('').includes(\"'\")){\r\n                    faceToRotate=faceToRotate.replace(\"'\",\"\");\r\n                    speed = Math.abs(speed);\r\n                }else {\r\n                    speed = Math.abs(speed)*-1;\r\n                }\r\n            }\r\n            else if(currentFunction()===\"scramble\") {\r\n                setCurrentFunction(\"none\");\r\n                //console.log(moveLog);\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Controls what happens at the end of each turn\r\n        if(Math.abs(counter) >= 72) {\r\n\r\n            // Rotate face sides back to original position\r\n            decaObject[face].sides.forEach((piece,i)=>{\r\n                piece.visible = false;\r\n\r\n                if(i%2){\r\n                    piece.translateZ(-1.631)\r\n                    piece.translateY(.895)\r\n                } \r\n                \r\n                else {\r\n                    piece.translateZ(-1.625)\r\n                    piece.translateY(1)\r\n                }\r\n\r\n                piece.rotateX(dToR(63.2))\r\n\r\n                counter<0?\r\n                    piece.rotateZ(dToR(Math.abs(counter))):\r\n                    piece.rotateZ(dToR(Math.abs(counter)*-1));\r\n\r\n                piece.rotateX(dToR(-63.2))\r\n\r\n                if(i%2){\r\n                    piece.translateZ(1.631)\r\n                    piece.translateY(-.895)\r\n                } \r\n                \r\n                else {\r\n                    piece.translateZ(1.625)\r\n                    piece.translateY(-1)\r\n                }\r\n            });\r\n\r\n            // Rotate face back to original position\r\n            decaObject[face].front.forEach((piece,i)=>{\r\n                counter<0?\r\n                    piece.rotateZ(dToR(Math.abs(counter))):\r\n                    piece.rotateZ(dToR(Math.abs(counter)*-1));\r\n            });\r\n\r\n            // Show face pieces that were hidden during turn\r\n            facesToHide[face].forEach(piece=>{\r\n                decaObject[`face${piece.face}`].front[piece.pos].visible=true;\r\n            });\r\n\r\n            // Move colors around\r\n            swapColors(face,decaObject,speed);\r\n\r\n            // allPieces = pieces(decaObject);\r\n            // console.log(allPieces.corners[5])\r\n\r\n            counter=0;\r\n            faceToRotate=\"face0\"\r\n            return;\r\n        }\r\n\r\n        if((Math.abs(speed)+Math.abs(counter))>72){\r\n            tempSpeed = (72-Math.abs(counter))*(counter/Math.abs(counter))\r\n        }\r\n\r\n        facesToHide[face].forEach(piece=>{\r\n            decaObject[`face${piece.face}`].front[piece.pos].visible=false;\r\n        });\r\n\r\n        decaObject[face].front.forEach((piece,i)=>{\r\n            \r\n            piece.rotateZ(dToR(tempSpeed));\r\n        });\r\n\r\n        decaObject[face].sides.forEach((piece,i)=>{\r\n            piece.visible = true;\r\n            \r\n            if(i%2&&i<30) {\r\n                let {side,pos} = colorMatchUps[face][`${i}`]\r\n                piece.material.color.set(\r\n                    decaObject[`face${side}`].front[pos].material.color\r\n                );\r\n            }\r\n            if(i===111){\r\n                piece.material.color.set(\r\n                    \"grey\",\r\n                );\r\n            }\r\n            if(i%2){\r\n                piece.translateZ(-1.631)\r\n                piece.translateY(.895)\r\n            } else {\r\n                piece.translateZ(-1.625)\r\n                piece.translateY(1)\r\n            }\r\n                piece.rotateX(dToR(63.2))\r\n\r\n                piece.rotateZ(dToR(tempSpeed));\r\n\r\n                piece.rotateX(dToR(-63.2))\r\n\r\n            if(i%2){\r\n                piece.translateZ(1.631)\r\n                piece.translateY(-.895)\r\n            } else {\r\n                piece.translateZ(1.625)\r\n                piece.translateY(-1)\r\n            }\r\n            \r\n        })\r\n        counter+=speed;\r\n    }\r\n\r\n    let animate = () => {\r\n        rotateFace(faceToRotate);\r\n        requestAnimationFrame( animate );\r\n        controls.update();\r\n        renderer.render( scene, camera );\r\n    };\r\n\r\n    let resetMegaMinx = () => {\r\n        // Generate object of piece references\r\n        decaObject={};\r\n        facePos.forEach((set,i)=>{decaObject[`face${i+1}`]={front : [],sides : []}});\r\n\r\n        // Put the MegaMinx on the screen!\r\n        scene.clear();\r\n        facePos.forEach((set,i)=>decaFace(1,set.translate,set.rotate,faceColors[i],i));\r\n    }\r\n\r\n    animate();\r\n    return (\r\n        <Menu \r\n            setMoveQueue={setMoveQueue}\r\n            resetMegaMinx={resetMegaMinx}\r\n            reset={reset}\r\n            setCurrentFunction={setCurrentFunction}\r\n            currentFunction={currentFunction}\r\n            setColor={setCurrentColor}\r\n            getColor={getCurrentColor}\r\n            setSpeed={setSpeed}\r\n            speed={getSpeed}\r\n            setMoveLogIndex={setMoveLogIndex}\r\n            decaObject={decaObject}\r\n            getCounter={getCounter}\r\n        />\r\n    );\r\n}\r\n\r\nexport default MegaMinx;","import \"./Modal.css\";\r\n\r\nconst Modal = ({modal,toggleModal}) => {\r\n    let closeModal = () => {\r\n        toggleModal(false);\r\n    }\r\n    return (\r\n        modal?\r\n        <div className=\"modal-wrapper\" onClick={closeModal}>\r\n            <div className=\"modal-container\">\r\n                <div className=\"modal-header\">\r\n                    <b>Instructions</b>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    Click and drag anywhere not on the megaminx to rotate the camera\r\n                    <hr></hr>\r\n                    Click and drag on any piece except middle pieces to make turns\r\n                    <hr></hr>\r\n                    Author: Sasha Peters\r\n                    <br></br>\r\n                    <a target=\"#\" href=\"https://www.github.com/merpig\">\r\n                        <i className=\"fa fa-github\"></i>\r\n                    </a>\r\n                    <a target=\"#\" href=\"https://www.github.com/merpig\">\r\n                        <i className=\"fa fa-linkedin\"></i>\r\n                    </a>\r\n                    <hr></hr>\r\n                    Site design / MegaMinxProgram model © 2021 MegaMinxProgram\r\n                </div>\r\n            </div>\r\n        </div>:[]\r\n    )\r\n}\r\n\r\nexport default Modal;","import React, { useState } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport 'react-dropdown/style.css'\r\nimport Popup from \"reactjs-popup\";\r\nimport Modal from \"../Modal/Modal\"\r\n\r\nconst Navbar = () => {\r\n\r\n  let [modal,toggleModal] = useState(false);\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-dark fixed-top\">\r\n      <ul className=\"nav nav-justified mr-auto\">\r\n        <li className=\"nav-item nav-fix-for-edge\">\r\n          <p className=\"navbar-brand\" style={{ color: \"lightgray\" }}><b>MegaMinx</b></p>\r\n\r\n          {/*Open model here. Show bunch of settings. Pass changeSettings down to component to apply changes*/}\r\n          \r\n        </li>\r\n      </ul>\r\n      <div style={{ float: \"right\", height: \"100%\" }} >\r\n        <button id=\"infoBtn\" onClick={()=>toggleModal(true)}>Info</button>\r\n        <button id=\"fullscreenBtn\" value=\"true\">Fullscreen</button>\r\n        <Modal modal={modal} toggleModal={toggleModal} />\r\n      </div>\r\n    </nav>)\r\n};\r\n\r\nexport default Navbar;\r\n","//import logo from './logo.svg';\r\nimport { useState } from 'react';\r\nimport './App.css';\r\nimport MegaMinx from './components/MegaMinx/MegaMinx';\r\nimport Navbar from './components/Navbar/Navbar';\r\n\r\nconst App = () => {\r\n  const [reset,setReset] = useState(0);\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar/>\r\n      <MegaMinx reset={setReset}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}